	.text
	.file	"main.cpp"
	.section	.text.startup,"ax",@progbits
	.p2align	4, 0x90         # -- Begin function __cxx_global_var_init
	.type	__cxx_global_var_init,@function
__cxx_global_var_init:                  # @__cxx_global_var_init
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movabsq	$_ZStL8__ioinit, %rdi
	callq	_ZNSt8ios_base4InitC1Ev
	movabsq	$_ZNSt8ios_base4InitD1Ev, %rdi
	movabsq	$_ZStL8__ioinit, %rsi
	movabsq	$__dso_handle, %rdx
	callq	__cxa_atexit
	movl	%eax, -4(%rbp)          # 4-byte Spill
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end0:
	.size	__cxx_global_var_init, .Lfunc_end0-__cxx_global_var_init
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function main
.LCPI1_0:
	.quad	4626322717216342016     # double 20
.LCPI1_1:
	.quad	4627448617123184640     # double 24
.LCPI1_2:
	.quad	4626604192193052672     # double 21
.LCPI1_3:
	.quad	4627730092099895296     # double 25
.LCPI1_4:
	.quad	4626885667169763328     # double 22
.LCPI1_5:
	.quad	4628011567076605952     # double 26
.LCPI1_6:
	.quad	4627167142146473984     # double 23
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI1_7:
	.long	1127219200              # 0x43300000
	.long	1160773632              # 0x45300000
	.long	0                       # 0x0
	.long	0                       # 0x0
.LCPI1_8:
	.quad	4841369599423283200     # double 4503599627370496
	.quad	4985484787499139072     # double 1.9342813113834067E+25
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception0
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$1040, %rsp             # imm = 0x410
	movl	$0, -4(%rbp)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -912(%rbp)        # 8-byte Spill
	callq	_ZNSaIcEC1Ev
.Ltmp0:
	movl	$.L.str, %ecx
	movl	%ecx, %esi
	leaq	-40(%rbp), %rdi
	movq	-912(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
.Ltmp1:
	jmp	.LBB1_1
.LBB1_1:
	leaq	-48(%rbp), %rdi
	callq	_ZNSaIcED1Ev
	movl	$5, -64(%rbp)
.Ltmp3:
	leaq	-256(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_
.Ltmp4:
	jmp	.LBB1_2
.LBB1_2:
	movl	-64(%rbp), %edx
.Ltmp6:
	leaq	-224(%rbp), %rdi
	leaq	-256(%rbp), %rsi
	callq	_ZN14LimitOrderBookC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
.Ltmp7:
	jmp	.LBB1_3
.LBB1_3:
	leaq	-256(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	leaq	-296(%rbp), %rdi
	movq	%rdi, -920(%rbp)        # 8-byte Spill
	callq	_ZNSaIcEC1Ev
.Ltmp9:
	movl	$.L.str.1, %eax
	movl	%eax, %esi
	leaq	-288(%rbp), %rdi
	movq	-920(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
.Ltmp10:
	jmp	.LBB1_4
.LBB1_4:
	leaq	-296(%rbp), %rdi
	callq	_ZNSaIcED1Ev
	leaq	-376(%rbp), %rdi
	movsd	.LCPI1_0(%rip), %xmm0   # xmm0 = mem[0],zero
	movsd	.LCPI1_1(%rip), %xmm1   # xmm1 = mem[0],zero
	movsd	.LCPI1_2(%rip), %xmm2   # xmm2 = mem[0],zero
	movsd	.LCPI1_3(%rip), %xmm3   # xmm3 = mem[0],zero
	movsd	.LCPI1_4(%rip), %xmm4   # xmm4 = mem[0],zero
	movsd	.LCPI1_5(%rip), %xmm5   # xmm5 = mem[0],zero
	movsd	.LCPI1_6(%rip), %xmm6   # xmm6 = mem[0],zero
	movsd	%xmm6, -304(%rbp)
	movsd	%xmm5, -312(%rbp)
	movsd	%xmm4, -320(%rbp)
	movsd	%xmm3, -328(%rbp)
	movsd	%xmm2, -336(%rbp)
	movsd	%xmm1, -344(%rbp)
	movsd	%xmm0, -352(%rbp)
	callq	_ZNSt6vectorIdSaIdEEC2Ev
	movl	$0, -380(%rbp)
.LBB1_5:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB1_12 Depth 2
	cmpl	$5000, -380(%rbp)       # imm = 0x1388
	jge	.LBB1_47
# %bb.6:                                #   in Loop: Header=BB1_5 Depth=1
.Ltmp20:
	leaq	-576(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_
.Ltmp21:
	jmp	.LBB1_7
.LBB1_7:                                #   in Loop: Header=BB1_5 Depth=1
	movl	-64(%rbp), %edx
.Ltmp23:
	leaq	-544(%rbp), %rdi
	leaq	-576(%rbp), %rsi
	callq	_ZN14LimitOrderBookC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
.Ltmp24:
	jmp	.LBB1_8
.LBB1_8:                                #   in Loop: Header=BB1_5 Depth=1
	leaq	-576(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	movq	$0, -584(%rbp)
	movq	$0, -592(%rbp)
.Ltmp26:
	leaq	-600(%rbp), %rdi
	callq	_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC2Ev
.Ltmp27:
	jmp	.LBB1_9
.LBB1_9:                                #   in Loop: Header=BB1_5 Depth=1
.Ltmp28:
	leaq	-608(%rbp), %rdi
	callq	_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC2Ev
.Ltmp29:
	jmp	.LBB1_10
.LBB1_10:                               #   in Loop: Header=BB1_5 Depth=1
.Ltmp30:
	leaq	-688(%rbp), %rdi
	callq	_ZN3BOAC2Ev
.Ltmp31:
	jmp	.LBB1_11
.LBB1_11:                               #   in Loop: Header=BB1_5 Depth=1
	leaq	-712(%rbp), %rdi
	callq	_ZNSt6vectorI3BOASaIS0_EEC2Ev
	leaq	-736(%rbp), %rdi
	callq	_ZNSt6vectorI3BOASaIS0_EEC2Ev
	movl	$0, -740(%rbp)
.LBB1_12:                               #   Parent Loop BB1_5 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpl	$9999, -740(%rbp)       # imm = 0x270F
	jge	.LBB1_44
# %bb.13:                               #   in Loop: Header=BB1_12 Depth=2
.Ltmp33:
	leaq	-824(%rbp), %rdi
	callq	_ZN3BOAC2Ev
.Ltmp34:
	jmp	.LBB1_14
.LBB1_14:                               #   in Loop: Header=BB1_12 Depth=2
	leaq	-688(%rbp), %rdi
	leaq	-824(%rbp), %rax
	movq	%rax, %rsi
	movq	%rax, -928(%rbp)        # 8-byte Spill
	callq	_ZN3BOAaSEOS_
	movq	-928(%rbp), %rdi        # 8-byte Reload
	movq	%rax, -936(%rbp)        # 8-byte Spill
	callq	_ZN3BOAD2Ev
	callq	_ZNSt6chrono3_V212system_clock3nowEv
	movq	%rax, -832(%rbp)
	movq	-832(%rbp), %rax
	movq	%rax, -600(%rbp)
.Ltmp35:
	movl	$.L.str.1, %ecx
	movl	%ecx, %esi
	leaq	-288(%rbp), %rdi
	callq	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
.Ltmp36:
	movb	%al, -937(%rbp)         # 1-byte Spill
	jmp	.LBB1_15
.LBB1_15:                               #   in Loop: Header=BB1_12 Depth=2
	movb	-937(%rbp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB1_16
	jmp	.LBB1_34
.LBB1_16:                               #   in Loop: Header=BB1_12 Depth=2
	leaq	-640(%rbp), %rdi
.Ltmp37:
	movl	$.L.str.2, %eax
	movl	%eax, %esi
	callq	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
.Ltmp38:
	movb	%al, -938(%rbp)         # 1-byte Spill
	jmp	.LBB1_17
.LBB1_17:                               #   in Loop: Header=BB1_12 Depth=2
	movb	-938(%rbp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB1_18
	jmp	.LBB1_28
.LBB1_18:                               #   in Loop: Header=BB1_12 Depth=2
	leaq	-656(%rbp), %rsi
	leaq	-648(%rbp), %rdx
.Ltmp43:
	leaq	-544(%rbp), %rdi
	callq	_ZN14LimitOrderBook7add_askEPdS0_
.Ltmp44:
	jmp	.LBB1_19
.LBB1_19:                               #   in Loop: Header=BB1_12 Depth=2
	jmp	.LBB1_33
.LBB1_20:
.Ltmp2:
	leaq	-48(%rbp), %rdi
	movl	%edx, %ecx
	movq	%rax, -56(%rbp)
	movl	%ecx, -60(%rbp)
	callq	_ZNSaIcED1Ev
	jmp	.LBB1_59
.LBB1_21:
.Ltmp5:
	movl	%edx, %ecx
	movq	%rax, -56(%rbp)
	movl	%ecx, -60(%rbp)
	jmp	.LBB1_58
.LBB1_22:
.Ltmp8:
	leaq	-256(%rbp), %rdi
	movl	%edx, %ecx
	movq	%rax, -56(%rbp)
	movl	%ecx, -60(%rbp)
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	jmp	.LBB1_58
.LBB1_23:
.Ltmp11:
	leaq	-296(%rbp), %rdi
	movl	%edx, %ecx
	movq	%rax, -56(%rbp)
	movl	%ecx, -60(%rbp)
	callq	_ZNSaIcED1Ev
	jmp	.LBB1_57
.LBB1_24:
.Ltmp22:
	movl	%edx, %ecx
	movq	%rax, -56(%rbp)
	movl	%ecx, -60(%rbp)
	jmp	.LBB1_56
.LBB1_25:
.Ltmp25:
	leaq	-576(%rbp), %rdi
	movl	%edx, %ecx
	movq	%rax, -56(%rbp)
	movl	%ecx, -60(%rbp)
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	jmp	.LBB1_56
.LBB1_26:
.Ltmp32:
	movl	%edx, %ecx
	movq	%rax, -56(%rbp)
	movl	%ecx, -60(%rbp)
	jmp	.LBB1_46
.LBB1_27:
.Ltmp57:
	leaq	-736(%rbp), %rdi
	movl	%edx, %ecx
	movq	%rax, -56(%rbp)
	movl	%ecx, -60(%rbp)
	callq	_ZNSt6vectorI3BOASaIS0_EED2Ev
	leaq	-712(%rbp), %rdi
	callq	_ZNSt6vectorI3BOASaIS0_EED2Ev
	leaq	-688(%rbp), %rdi
	callq	_ZN3BOAD2Ev
	jmp	.LBB1_46
.LBB1_28:                               #   in Loop: Header=BB1_12 Depth=2
	leaq	-640(%rbp), %rdi
.Ltmp39:
	movl	$.L.str.3, %eax
	movl	%eax, %esi
	callq	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
.Ltmp40:
	movb	%al, -939(%rbp)         # 1-byte Spill
	jmp	.LBB1_29
.LBB1_29:                               #   in Loop: Header=BB1_12 Depth=2
	movb	-939(%rbp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB1_30
	jmp	.LBB1_32
.LBB1_30:                               #   in Loop: Header=BB1_12 Depth=2
	leaq	-656(%rbp), %rsi
	leaq	-648(%rbp), %rdx
.Ltmp41:
	leaq	-544(%rbp), %rdi
	callq	_ZN14LimitOrderBook7add_bidEPdS0_
.Ltmp42:
	jmp	.LBB1_31
.LBB1_31:                               #   in Loop: Header=BB1_12 Depth=2
	jmp	.LBB1_32
.LBB1_32:                               #   in Loop: Header=BB1_12 Depth=2
	jmp	.LBB1_33
.LBB1_33:                               #   in Loop: Header=BB1_12 Depth=2
	jmp	.LBB1_34
.LBB1_34:                               #   in Loop: Header=BB1_12 Depth=2
	callq	_ZNSt6chrono3_V212system_clock3nowEv
	movq	%rax, -840(%rbp)
	movq	-840(%rbp), %rax
	movq	%rax, -608(%rbp)
	leaq	-408(%rbp), %rdi
.Ltmp45:
	leaq	-608(%rbp), %rax
	leaq	-600(%rbp), %rsi
	movq	%rdi, -952(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE
.Ltmp46:
	movq	%rax, -960(%rbp)        # 8-byte Spill
	jmp	.LBB1_35
.LBB1_35:                               #   in Loop: Header=BB1_12 Depth=2
	movq	-960(%rbp), %rax        # 8-byte Reload
	movq	%rax, -864(%rbp)
.Ltmp47:
	leaq	-864(%rbp), %rdi
	callq	_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE
.Ltmp48:
	movq	%rax, -968(%rbp)        # 8-byte Spill
	jmp	.LBB1_36
.LBB1_36:                               #   in Loop: Header=BB1_12 Depth=2
	movq	-968(%rbp), %rax        # 8-byte Reload
	movq	%rax, -856(%rbp)
.Ltmp49:
	leaq	-856(%rbp), %rdi
	callq	_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv
.Ltmp50:
	movq	%rax, -976(%rbp)        # 8-byte Spill
	jmp	.LBB1_37
.LBB1_37:                               #   in Loop: Header=BB1_12 Depth=2
	movq	-976(%rbp), %rax        # 8-byte Reload
	cvtsi2sdq	%rax, %xmm0
	movsd	%xmm0, -848(%rbp)
.Ltmp51:
	leaq	-848(%rbp), %rsi
	movq	-952(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIdSaIdEE9push_backEOd
.Ltmp52:
	jmp	.LBB1_38
.LBB1_38:                               #   in Loop: Header=BB1_12 Depth=2
	cmpl	$9998, -740(%rbp)       # imm = 0x270E
	jne	.LBB1_42
# %bb.39:                               #   in Loop: Header=BB1_12 Depth=2
.Ltmp53:
	leaq	-544(%rbp), %rdi
	callq	_ZN14LimitOrderBook16get_update_statsEv
.Ltmp54:
	movsd	%xmm0, -984(%rbp)       # 8-byte Spill
	jmp	.LBB1_40
.LBB1_40:                               #   in Loop: Header=BB1_12 Depth=2
	movsd	-984(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, -872(%rbp)
.Ltmp55:
	leaq	-376(%rbp), %rdi
	leaq	-872(%rbp), %rsi
	callq	_ZNSt6vectorIdSaIdEE9push_backEOd
.Ltmp56:
	jmp	.LBB1_41
.LBB1_41:                               #   in Loop: Header=BB1_12 Depth=2
	jmp	.LBB1_42
.LBB1_42:                               #   in Loop: Header=BB1_12 Depth=2
	jmp	.LBB1_43
.LBB1_43:                               #   in Loop: Header=BB1_12 Depth=2
	movl	-740(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -740(%rbp)
	jmp	.LBB1_12
.LBB1_44:                               #   in Loop: Header=BB1_5 Depth=1
	leaq	-736(%rbp), %rdi
	callq	_ZNSt6vectorI3BOASaIS0_EED2Ev
	leaq	-712(%rbp), %rdi
	callq	_ZNSt6vectorI3BOASaIS0_EED2Ev
	leaq	-688(%rbp), %rdi
	callq	_ZN3BOAD2Ev
	leaq	-544(%rbp), %rdi
	callq	_ZN14LimitOrderBookD2Ev
# %bb.45:                               #   in Loop: Header=BB1_5 Depth=1
	movl	-380(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -380(%rbp)
	jmp	.LBB1_5
.LBB1_46:
	leaq	-544(%rbp), %rdi
	callq	_ZN14LimitOrderBookD2Ev
	jmp	.LBB1_56
.LBB1_47:
	leaq	-376(%rbp), %rdi
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -880(%rbp)
	callq	_ZNSt6vectorIdSaIdEE5beginEv
	movq	%rax, -888(%rbp)
.LBB1_48:                               # =>This Inner Loop Header: Depth=1
	leaq	-376(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEE3endEv
	leaq	-888(%rbp), %rdi
	leaq	-896(%rbp), %rsi
	movq	%rax, -896(%rbp)
	callq	_ZN9__gnu_cxxneIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_
	testb	$1, %al
	jne	.LBB1_49
	jmp	.LBB1_51
.LBB1_49:                               #   in Loop: Header=BB1_48 Depth=1
	leaq	-888(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv
	movsd	(%rax), %xmm0           # xmm0 = mem[0],zero
	addsd	-880(%rbp), %xmm0
	movsd	%xmm0, -880(%rbp)
# %bb.50:                               #   in Loop: Header=BB1_48 Depth=1
	leaq	-888(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv
	movq	%rax, -992(%rbp)        # 8-byte Spill
	jmp	.LBB1_48
.LBB1_51:
	movsd	-880(%rbp), %xmm0       # xmm0 = mem[0],zero
	leaq	-376(%rbp), %rdi
	movsd	%xmm0, -1000(%rbp)      # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, %xmm0
	movaps	.LCPI1_7(%rip), %xmm1   # xmm1 = [1127219200,1160773632,0,0]
	punpckldq	%xmm1, %xmm0    # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	movapd	.LCPI1_8(%rip), %xmm1   # xmm1 = [4.503600e+15,1.934281e+25]
	subpd	%xmm1, %xmm0
	pshufd	$78, %xmm0, %xmm1       # xmm1 = xmm0[2,3,0,1]
	addpd	%xmm0, %xmm1
	movsd	-1000(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -904(%rbp)
.Ltmp12:
	movl	$_ZSt4cout, %ecx
	movl	%ecx, %edi
	movl	$.L.str.4, %ecx
	movl	%ecx, %esi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp13:
	movq	%rax, -1008(%rbp)       # 8-byte Spill
	jmp	.LBB1_52
.LBB1_52:
	movsd	-904(%rbp), %xmm0       # xmm0 = mem[0],zero
.Ltmp14:
	movq	-1008(%rbp), %rdi       # 8-byte Reload
	callq	_ZNSolsEd
.Ltmp15:
	movq	%rax, -1016(%rbp)       # 8-byte Spill
	jmp	.LBB1_53
.LBB1_53:
.Ltmp16:
	movl	$.L.str.5, %eax
	movl	%eax, %esi
	movq	-1016(%rbp), %rdi       # 8-byte Reload
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp17:
	movq	%rax, -1024(%rbp)       # 8-byte Spill
	jmp	.LBB1_54
.LBB1_54:
.Ltmp18:
	movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %eax
	movl	%eax, %esi
	movq	-1024(%rbp), %rdi       # 8-byte Reload
	callq	_ZNSolsEPFRSoS_E
.Ltmp19:
	movq	%rax, -1032(%rbp)       # 8-byte Spill
	jmp	.LBB1_55
.LBB1_55:
	leaq	-376(%rbp), %rdi
	movl	$0, -4(%rbp)
	callq	_ZNSt6vectorIdSaIdEED2Ev
	leaq	-288(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	leaq	-224(%rbp), %rdi
	callq	_ZN14LimitOrderBookD2Ev
	leaq	-40(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	movl	-4(%rbp), %eax
	addq	$1040, %rsp             # imm = 0x410
	popq	%rbp
	retq
.LBB1_56:
	leaq	-376(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
	leaq	-288(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
.LBB1_57:
	leaq	-224(%rbp), %rdi
	callq	_ZN14LimitOrderBookD2Ev
.LBB1_58:
	leaq	-40(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
.LBB1_59:
	movq	-56(%rbp), %rdi
	callq	_Unwind_Resume
.Lfunc_end1:
	.size	main, .Lfunc_end1-main
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table1:
.Lexception0:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	"\205\201\200\200"      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.ascii	"\202\001"              # Call site table length
	.long	.Ltmp0-.Lfunc_begin0    # >> Call Site 1 <<
	.long	.Ltmp1-.Ltmp0           #   Call between .Ltmp0 and .Ltmp1
	.long	.Ltmp2-.Lfunc_begin0    #     jumps to .Ltmp2
	.byte	0                       #   On action: cleanup
	.long	.Ltmp3-.Lfunc_begin0    # >> Call Site 2 <<
	.long	.Ltmp4-.Ltmp3           #   Call between .Ltmp3 and .Ltmp4
	.long	.Ltmp5-.Lfunc_begin0    #     jumps to .Ltmp5
	.byte	0                       #   On action: cleanup
	.long	.Ltmp6-.Lfunc_begin0    # >> Call Site 3 <<
	.long	.Ltmp7-.Ltmp6           #   Call between .Ltmp6 and .Ltmp7
	.long	.Ltmp8-.Lfunc_begin0    #     jumps to .Ltmp8
	.byte	0                       #   On action: cleanup
	.long	.Ltmp9-.Lfunc_begin0    # >> Call Site 4 <<
	.long	.Ltmp10-.Ltmp9          #   Call between .Ltmp9 and .Ltmp10
	.long	.Ltmp11-.Lfunc_begin0   #     jumps to .Ltmp11
	.byte	0                       #   On action: cleanup
	.long	.Ltmp20-.Lfunc_begin0   # >> Call Site 5 <<
	.long	.Ltmp21-.Ltmp20         #   Call between .Ltmp20 and .Ltmp21
	.long	.Ltmp22-.Lfunc_begin0   #     jumps to .Ltmp22
	.byte	0                       #   On action: cleanup
	.long	.Ltmp23-.Lfunc_begin0   # >> Call Site 6 <<
	.long	.Ltmp24-.Ltmp23         #   Call between .Ltmp23 and .Ltmp24
	.long	.Ltmp25-.Lfunc_begin0   #     jumps to .Ltmp25
	.byte	0                       #   On action: cleanup
	.long	.Ltmp26-.Lfunc_begin0   # >> Call Site 7 <<
	.long	.Ltmp31-.Ltmp26         #   Call between .Ltmp26 and .Ltmp31
	.long	.Ltmp32-.Lfunc_begin0   #     jumps to .Ltmp32
	.byte	0                       #   On action: cleanup
	.long	.Ltmp33-.Lfunc_begin0   # >> Call Site 8 <<
	.long	.Ltmp56-.Ltmp33         #   Call between .Ltmp33 and .Ltmp56
	.long	.Ltmp57-.Lfunc_begin0   #     jumps to .Ltmp57
	.byte	0                       #   On action: cleanup
	.long	.Ltmp12-.Lfunc_begin0   # >> Call Site 9 <<
	.long	.Ltmp19-.Ltmp12         #   Call between .Ltmp12 and .Ltmp19
	.long	.Ltmp22-.Lfunc_begin0   #     jumps to .Ltmp22
	.byte	0                       #   On action: cleanup
	.long	.Ltmp19-.Lfunc_begin0   # >> Call Site 10 <<
	.long	.Lfunc_end1-.Ltmp19     #   Call between .Ltmp19 and .Lfunc_end1
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.p2align	2
                                        # -- End function
	.section	.text._ZN14LimitOrderBookC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi,"axG",@progbits,_ZN14LimitOrderBookC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi,comdat
	.weak	_ZN14LimitOrderBookC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi # -- Begin function _ZN14LimitOrderBookC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
	.p2align	4, 0x90
	.type	_ZN14LimitOrderBookC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi,@function
_ZN14LimitOrderBookC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi: # @_ZN14LimitOrderBookC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception1
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movl	%edx, -12(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEC2Ev
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$48, %rax
	movq	%rax, %rdi
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEC2Ev
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$96, %rax
	movq	%rax, %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$136, %rax
	movq	%rax, %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIdSaIdEEC2Ev
.Ltmp58:
	movq	-72(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_
.Ltmp59:
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jmp	.LBB2_1
.LBB2_1:
	imull	$10000, -12(%rbp), %eax # imm = 0x2710
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	%eax, 132(%rcx)
	movl	-12(%rbp), %eax
	movl	%eax, 128(%rcx)
	addq	$96, %rsp
	popq	%rbp
	retq
.LBB2_2:
.Ltmp60:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
	movq	-80(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIdSaIdEED2Ev
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEED2Ev
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEED2Ev
# %bb.3:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.Lfunc_end2:
	.size	_ZN14LimitOrderBookC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi, .Lfunc_end2-_ZN14LimitOrderBookC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table2:
.Lexception1:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	"\234"                  # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
	.long	.Ltmp58-.Lfunc_begin1   # >> Call Site 1 <<
	.long	.Ltmp59-.Ltmp58         #   Call between .Ltmp58 and .Ltmp59
	.long	.Ltmp60-.Lfunc_begin1   #     jumps to .Ltmp60
	.byte	0                       #   On action: cleanup
	.long	.Ltmp59-.Lfunc_begin1   # >> Call Site 2 <<
	.long	.Lfunc_end2-.Ltmp59     #   Call between .Ltmp59 and .Lfunc_end2
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEEC2Ev,"axG",@progbits,_ZNSt6vectorIdSaIdEEC2Ev,comdat
	.weak	_ZNSt6vectorIdSaIdEEC2Ev # -- Begin function _ZNSt6vectorIdSaIdEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEEC2Ev,@function
_ZNSt6vectorIdSaIdEEC2Ev:               # @_ZNSt6vectorIdSaIdEEC2Ev
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception2
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
.Ltmp61:
	callq	_ZNSt12_Vector_baseIdSaIdEEC2Ev
.Ltmp62:
	jmp	.LBB3_1
.LBB3_1:
	addq	$16, %rsp
	popq	%rbp
	retq
.LBB3_2:
.Ltmp63:
	movl	%edx, %ecx
	movq	%rax, %rdi
	movl	%ecx, -12(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.Lfunc_end3:
	.size	_ZNSt6vectorIdSaIdEEC2Ev, .Lfunc_end3-_ZNSt6vectorIdSaIdEEC2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table3:
.Lexception2:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	21                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	13                      # Call site table length
	.long	.Ltmp61-.Lfunc_begin2   # >> Call Site 1 <<
	.long	.Ltmp62-.Ltmp61         #   Call between .Ltmp61 and .Ltmp62
	.long	.Ltmp63-.Lfunc_begin2   #     jumps to .Ltmp63
	.byte	1                       #   On action: 1
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC2Ev,"axG",@progbits,_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC2Ev,comdat
	.weak	_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC2Ev # -- Begin function _ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC2Ev,@function
_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC2Ev: # @_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	callq	_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv
	movq	-16(%rbp), %rdi         # 8-byte Reload
	movq	%rax, (%rdi)
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end4:
	.size	_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC2Ev, .Lfunc_end4-_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN3BOAC2Ev,"axG",@progbits,_ZN3BOAC2Ev,comdat
	.weak	_ZN3BOAC2Ev             # -- Begin function _ZN3BOAC2Ev
	.p2align	4, 0x90
	.type	_ZN3BOAC2Ev,@function
_ZN3BOAC2Ev:                            # @_ZN3BOAC2Ev
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception3
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movabsq	$4621622085105274061, %rax # imm = 0x40234CCCCCCCCCCD
	movq	%rax, (%rdi)
	movabsq	$4652007308841189376, %rax # imm = 0x408F400000000000
	movq	%rax, 8(%rdi)
	movabsq	$4620912768163963208, %rax # imm = 0x4020C7AE147AE148
	movq	%rax, 16(%rdi)
	movabsq	$4547007122018943789, %rax # imm = 0x3F1A36E2EB1C432D
	movq	%rax, 24(%rdi)
	movq	%rdi, %rax
	addq	$48, %rax
	movq	%rdi, -64(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsd	(%rax), %xmm1           # xmm1 = mem[0],zero
	movsd	16(%rax), %xmm0         # xmm0 = mem[0],zero
.Ltmp64:
	movq	%rax, %rdi
	callq	_ZN3BOA12random_priceEdd
.Ltmp65:
	movsd	%xmm0, -80(%rbp)        # 8-byte Spill
	jmp	.LBB5_1
.LBB5_1:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsd	-80(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 32(%rax)
	movsd	8(%rax), %xmm1          # xmm1 = mem[0],zero
	movsd	24(%rax), %xmm0         # xmm0 = mem[0],zero
.Ltmp66:
	movq	%rax, %rdi
	callq	_ZN3BOA13random_volumeEdd
.Ltmp67:
	movsd	%xmm0, -88(%rbp)        # 8-byte Spill
	jmp	.LBB5_2
.LBB5_2:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsd	-88(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 40(%rax)
.Ltmp68:
	leaq	-56(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN3BOA11sideOfOrderB5cxx11Ev
.Ltmp69:
	jmp	.LBB5_3
.LBB5_3:
	leaq	-56(%rbp), %rsi
	movq	-64(%rbp), %rax         # 8-byte Reload
	addq	$48, %rax
	movq	%rax, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
	leaq	-56(%rbp), %rdi
	movq	%rax, -96(%rbp)         # 8-byte Spill
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	addq	$96, %rsp
	popq	%rbp
	retq
.LBB5_4:
.Ltmp70:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
# %bb.5:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Lfunc_end5:
	.size	_ZN3BOAC2Ev, .Lfunc_end5-_ZN3BOAC2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table5:
.Lexception3:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	"\234"                  # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
	.long	.Ltmp64-.Lfunc_begin3   # >> Call Site 1 <<
	.long	.Ltmp69-.Ltmp64         #   Call between .Ltmp64 and .Ltmp69
	.long	.Ltmp70-.Lfunc_begin3   #     jumps to .Ltmp70
	.byte	0                       #   On action: cleanup
	.long	.Ltmp69-.Lfunc_begin3   # >> Call Site 2 <<
	.long	.Lfunc_end5-.Ltmp69     #   Call between .Ltmp69 and .Lfunc_end5
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorI3BOASaIS0_EEC2Ev,"axG",@progbits,_ZNSt6vectorI3BOASaIS0_EEC2Ev,comdat
	.weak	_ZNSt6vectorI3BOASaIS0_EEC2Ev # -- Begin function _ZNSt6vectorI3BOASaIS0_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorI3BOASaIS0_EEC2Ev,@function
_ZNSt6vectorI3BOASaIS0_EEC2Ev:          # @_ZNSt6vectorI3BOASaIS0_EEC2Ev
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception4
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
.Ltmp71:
	callq	_ZNSt12_Vector_baseI3BOASaIS0_EEC2Ev
.Ltmp72:
	jmp	.LBB6_1
.LBB6_1:
	addq	$16, %rsp
	popq	%rbp
	retq
.LBB6_2:
.Ltmp73:
	movl	%edx, %ecx
	movq	%rax, %rdi
	movl	%ecx, -12(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.Lfunc_end6:
	.size	_ZNSt6vectorI3BOASaIS0_EEC2Ev, .Lfunc_end6-_ZNSt6vectorI3BOASaIS0_EEC2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table6:
.Lexception4:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	21                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	13                      # Call site table length
	.long	.Ltmp71-.Lfunc_begin4   # >> Call Site 1 <<
	.long	.Ltmp72-.Ltmp71         #   Call between .Ltmp71 and .Ltmp72
	.long	.Ltmp73-.Lfunc_begin4   #     jumps to .Ltmp73
	.byte	1                       #   On action: 1
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZN3BOAaSEOS_,"axG",@progbits,_ZN3BOAaSEOS_,comdat
	.weak	_ZN3BOAaSEOS_           # -- Begin function _ZN3BOAaSEOS_
	.p2align	4, 0x90
	.type	_ZN3BOAaSEOS_,@function
_ZN3BOAaSEOS_:                          # @_ZN3BOAaSEOS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movl	$48, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rsi, %rcx
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	-24(%rbp), %rcx         # 8-byte Reload
	movq	%rsi, -32(%rbp)         # 8-byte Spill
	movq	%rcx, %rsi
	callq	memcpy
	movq	-32(%rbp), %rcx         # 8-byte Reload
	addq	$48, %rcx
	movq	-16(%rbp), %rdx
	addq	$48, %rdx
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rcx, %rax
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end7:
	.size	_ZN3BOAaSEOS_, .Lfunc_end7-_ZN3BOAaSEOS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN3BOAD2Ev,"axG",@progbits,_ZN3BOAD2Ev,comdat
	.weak	_ZN3BOAD2Ev             # -- Begin function _ZN3BOAD2Ev
	.p2align	4, 0x90
	.type	_ZN3BOAD2Ev,@function
_ZN3BOAD2Ev:                            # @_ZN3BOAD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$48, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end8:
	.size	_ZN3BOAD2Ev, .Lfunc_end8-_ZN3BOAD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,"axG",@progbits,_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,comdat
	.weak	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_ # -- Begin function _ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.p2align	4, 0x90
	.type	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,@function
_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_: # @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
	cmpl	$0, %eax
	sete	%cl
	andb	$1, %cl
	movzbl	%cl, %eax
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end9:
	.size	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_, .Lfunc_end9-_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN14LimitOrderBook7add_askEPdS0_,"axG",@progbits,_ZN14LimitOrderBook7add_askEPdS0_,comdat
	.weak	_ZN14LimitOrderBook7add_askEPdS0_ # -- Begin function _ZN14LimitOrderBook7add_askEPdS0_
	.p2align	4, 0x90
	.type	_ZN14LimitOrderBook7add_askEPdS0_,@function
_ZN14LimitOrderBook7add_askEPdS0_:      # @_ZN14LimitOrderBook7add_askEPdS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	xorps	%xmm0, %xmm0
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	-24(%rbp), %rsi
	movsd	(%rsi), %xmm1           # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	jne	.LBB10_1
	jp	.LBB10_1
	jmp	.LBB10_2
.LBB10_1:
	movq	-24(%rbp), %rax
	movsd	(%rax), %xmm0           # xmm0 = mem[0],zero
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$48, %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	movsd	%xmm0, -40(%rbp)        # 8-byte Spill
	callq	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEixERS3_
	movsd	-40(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, (%rax)
	jmp	.LBB10_6
.LBB10_2:
	cmpq	$0, -24(%rbp)
	jne	.LBB10_4
# %bb.3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$48, %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE5eraseERS3_
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jmp	.LBB10_5
.LBB10_4:
	movabsq	$_ZSt4cout, %rdi
	movabsq	$.L.str.6, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	movabsq	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %rsi
	movq	%rax, %rdi
	callq	_ZNSolsEPFRSoS_E
	movq	%rax, -56(%rbp)         # 8-byte Spill
.LBB10_5:
	jmp	.LBB10_6
.LBB10_6:
	addq	$64, %rsp
	popq	%rbp
	retq
.Lfunc_end10:
	.size	_ZN14LimitOrderBook7add_askEPdS0_, .Lfunc_end10-_ZN14LimitOrderBook7add_askEPdS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN14LimitOrderBook7add_bidEPdS0_,"axG",@progbits,_ZN14LimitOrderBook7add_bidEPdS0_,comdat
	.weak	_ZN14LimitOrderBook7add_bidEPdS0_ # -- Begin function _ZN14LimitOrderBook7add_bidEPdS0_
	.p2align	4, 0x90
	.type	_ZN14LimitOrderBook7add_bidEPdS0_,@function
_ZN14LimitOrderBook7add_bidEPdS0_:      # @_ZN14LimitOrderBook7add_bidEPdS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	xorps	%xmm0, %xmm0
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	-24(%rbp), %rsi
	movsd	(%rsi), %xmm1           # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	jne	.LBB11_1
	jp	.LBB11_1
	jmp	.LBB11_2
.LBB11_1:
	movq	-24(%rbp), %rax
	movsd	(%rax), %xmm0           # xmm0 = mem[0],zero
	movq	-16(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movsd	%xmm0, -40(%rbp)        # 8-byte Spill
	callq	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEixERS3_
	movsd	-40(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, (%rax)
	jmp	.LBB11_6
.LBB11_2:
	cmpq	$0, -24(%rbp)
	jne	.LBB11_4
# %bb.3:
	movq	-16(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE5eraseERS3_
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jmp	.LBB11_5
.LBB11_4:
	movabsq	$_ZSt4cout, %rdi
	movabsq	$.L.str.7, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	movabsq	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %rsi
	movq	%rax, %rdi
	callq	_ZNSolsEPFRSoS_E
	movq	%rax, -56(%rbp)         # 8-byte Spill
.LBB11_5:
	jmp	.LBB11_6
.LBB11_6:
	addq	$64, %rsp
	popq	%rbp
	retq
.Lfunc_end11:
	.size	_ZN14LimitOrderBook7add_bidEPdS0_, .Lfunc_end11-_ZN14LimitOrderBook7add_bidEPdS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE9push_backEOd,"axG",@progbits,_ZNSt6vectorIdSaIdEE9push_backEOd,comdat
	.weak	_ZNSt6vectorIdSaIdEE9push_backEOd # -- Begin function _ZNSt6vectorIdSaIdEE9push_backEOd
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE9push_backEOd,@function
_ZNSt6vectorIdSaIdEE9push_backEOd:      # @_ZNSt6vectorIdSaIdEE9push_backEOd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	callq	_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end12:
	.size	_ZNSt6vectorIdSaIdEE9push_backEOd, .Lfunc_end12-_ZNSt6vectorIdSaIdEE9push_backEOd
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE,"axG",@progbits,_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE,comdat
	.weak	_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE # -- Begin function _ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE
	.p2align	4, 0x90
	.type	_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE,@function
_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE: # @_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1ELl1EElLb1ELb1EE6__castIlS3_EES4_RKNS1_IT_T0_EE
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end13:
	.size	_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE, .Lfunc_end13-_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS3_EENSt9enable_ifIXsr13__is_durationIT_EE5valueES6_E4typeERKNS1_IT0_T1_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE,"axG",@progbits,_ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE,comdat
	.weak	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE # -- Begin function _ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE
	.p2align	4, 0x90
	.type	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE,@function
_ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE: # @_ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rdi
	callq	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv
	leaq	-32(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	movq	%rax, -40(%rbp)
	callq	_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end14:
	.size	_ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE, .Lfunc_end14-_ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv,"axG",@progbits,_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv,comdat
	.weak	_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv # -- Begin function _ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv
	.p2align	4, 0x90
	.type	_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv,@function
_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv: # @_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rax
	popq	%rbp
	retq
.Lfunc_end15:
	.size	_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv, .Lfunc_end15-_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN14LimitOrderBook16get_update_statsEv
.LCPI16_0:
	.quad	4652007308841189376     # double 1000
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI16_1:
	.long	1127219200              # 0x43300000
	.long	1160773632              # 0x45300000
	.long	0                       # 0x0
	.long	0                       # 0x0
.LCPI16_2:
	.quad	4841369599423283200     # double 4503599627370496
	.quad	4985484787499139072     # double 1.9342813113834067E+25
	.section	.text._ZN14LimitOrderBook16get_update_statsEv,"axG",@progbits,_ZN14LimitOrderBook16get_update_statsEv,comdat
	.weak	_ZN14LimitOrderBook16get_update_statsEv
	.p2align	4, 0x90
	.type	_ZN14LimitOrderBook16get_update_statsEv,@function
_ZN14LimitOrderBook16get_update_statsEv: # @_ZN14LimitOrderBook16get_update_statsEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	movq	%rdi, %rax
	addq	$136, %rax
	movq	%rdi, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	cmpq	$0, %rax
	je	.LBB16_6
# %bb.1:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
	movq	-56(%rbp), %rax         # 8-byte Reload
	addq	$136, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIdSaIdEE5beginEv
	movq	%rax, -32(%rbp)
.LBB16_2:                               # =>This Inner Loop Header: Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	addq	$136, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIdSaIdEE3endEv
	leaq	-32(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	movq	%rax, -40(%rbp)
	callq	_ZN9__gnu_cxxneIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_
	testb	$1, %al
	jne	.LBB16_3
	jmp	.LBB16_5
.LBB16_3:                               #   in Loop: Header=BB16_2 Depth=1
	leaq	-32(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv
	movsd	(%rax), %xmm0           # xmm0 = mem[0],zero
	addsd	-24(%rbp), %xmm0
	movsd	%xmm0, -24(%rbp)
# %bb.4:                                #   in Loop: Header=BB16_2 Depth=1
	leaq	-32(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB16_2
.LBB16_5:
	movsd	.LCPI16_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-24(%rbp), %xmm1        # xmm1 = mem[0],zero
	movq	-56(%rbp), %rax         # 8-byte Reload
	addq	$136, %rax
	movq	%rax, %rdi
	movsd	%xmm0, -72(%rbp)        # 8-byte Spill
	movsd	%xmm1, -80(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, %xmm0
	movaps	.LCPI16_1(%rip), %xmm1  # xmm1 = [1127219200,1160773632,0,0]
	punpckldq	%xmm1, %xmm0    # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	movapd	.LCPI16_2(%rip), %xmm1  # xmm1 = [4.503600e+15,1.934281e+25]
	subpd	%xmm1, %xmm0
	pshufd	$78, %xmm0, %xmm1       # xmm1 = xmm0[2,3,0,1]
	addpd	%xmm0, %xmm1
	movsd	-80(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	divsd	%xmm1, %xmm0
	movsd	-72(%rbp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -48(%rbp)
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	%xmm0, -8(%rbp)
	jmp	.LBB16_7
.LBB16_6:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -8(%rbp)
.LBB16_7:
	movsd	-8(%rbp), %xmm0         # xmm0 = mem[0],zero
	addq	$80, %rsp
	popq	%rbp
	retq
.Lfunc_end16:
	.size	_ZN14LimitOrderBook16get_update_statsEv, .Lfunc_end16-_ZN14LimitOrderBook16get_update_statsEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorI3BOASaIS0_EED2Ev,"axG",@progbits,_ZNSt6vectorI3BOASaIS0_EED2Ev,comdat
	.weak	_ZNSt6vectorI3BOASaIS0_EED2Ev # -- Begin function _ZNSt6vectorI3BOASaIS0_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorI3BOASaIS0_EED2Ev,@function
_ZNSt6vectorI3BOASaIS0_EED2Ev:          # @_ZNSt6vectorI3BOASaIS0_EED2Ev
.Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception5
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseI3BOASaIS0_EE19_M_get_Tp_allocatorEv
.Ltmp74:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIP3BOAS0_EvT_S2_RSaIT0_E
.Ltmp75:
	jmp	.LBB17_1
.LBB17_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseI3BOASaIS0_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	retq
.LBB17_2:
.Ltmp76:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseI3BOASaIS0_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end17:
	.size	_ZNSt6vectorI3BOASaIS0_EED2Ev, .Lfunc_end17-_ZNSt6vectorI3BOASaIS0_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table17:
.Lexception5:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	21                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	13                      # Call site table length
	.long	.Ltmp74-.Lfunc_begin5   # >> Call Site 1 <<
	.long	.Ltmp75-.Ltmp74         #   Call between .Ltmp74 and .Ltmp75
	.long	.Ltmp76-.Lfunc_begin5   #     jumps to .Ltmp76
	.byte	1                       #   On action: 1
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZN14LimitOrderBookD2Ev,"axG",@progbits,_ZN14LimitOrderBookD2Ev,comdat
	.weak	_ZN14LimitOrderBookD2Ev # -- Begin function _ZN14LimitOrderBookD2Ev
	.p2align	4, 0x90
	.type	_ZN14LimitOrderBookD2Ev,@function
_ZN14LimitOrderBookD2Ev:                # @_ZN14LimitOrderBookD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	addq	$136, %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	addq	$96, %rax
	movq	%rax, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	addq	$48, %rax
	movq	%rax, %rdi
	callq	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEED2Ev
	movq	-16(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end18:
	.size	_ZN14LimitOrderBookD2Ev, .Lfunc_end18-_ZN14LimitOrderBookD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE5beginEv,"axG",@progbits,_ZNSt6vectorIdSaIdEE5beginEv,comdat
	.weak	_ZNSt6vectorIdSaIdEE5beginEv # -- Begin function _ZNSt6vectorIdSaIdEE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE5beginEv,@function
_ZNSt6vectorIdSaIdEE5beginEv:           # @_ZNSt6vectorIdSaIdEE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	leaq	-8(%rbp), %rax
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end19:
	.size	_ZNSt6vectorIdSaIdEE5beginEv, .Lfunc_end19-_ZNSt6vectorIdSaIdEE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxneIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_,"axG",@progbits,_ZN9__gnu_cxxneIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_,comdat
	.weak	_ZN9__gnu_cxxneIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ # -- Begin function _ZN9__gnu_cxxneIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxneIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_,@function
_ZN9__gnu_cxxneIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_: # @_ZN9__gnu_cxxneIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	movq	-24(%rbp), %rsi         # 8-byte Reload
	cmpq	(%rax), %rsi
	setne	%cl
	andb	$1, %cl
	movzbl	%cl, %eax
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end20:
	.size	_ZN9__gnu_cxxneIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_, .Lfunc_end20-_ZN9__gnu_cxxneIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE3endEv,"axG",@progbits,_ZNSt6vectorIdSaIdEE3endEv,comdat
	.weak	_ZNSt6vectorIdSaIdEE3endEv # -- Begin function _ZNSt6vectorIdSaIdEE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE3endEv,@function
_ZNSt6vectorIdSaIdEE3endEv:             # @_ZNSt6vectorIdSaIdEE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	leaq	-8(%rbp), %rax
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	addq	$8, %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end21:
	.size	_ZNSt6vectorIdSaIdEE3endEv, .Lfunc_end21-_ZNSt6vectorIdSaIdEE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rax
	popq	%rbp
	retq
.Lfunc_end22:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv, .Lfunc_end22-_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv,@function
_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv: # @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rax
	addq	$8, %rax
	movq	%rax, (%rdi)
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end23:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv, .Lfunc_end23-_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIdSaIdEE4sizeEv,"axG",@progbits,_ZNKSt6vectorIdSaIdEE4sizeEv,comdat
	.weak	_ZNKSt6vectorIdSaIdEE4sizeEv # -- Begin function _ZNKSt6vectorIdSaIdEE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIdSaIdEE4sizeEv,@function
_ZNKSt6vectorIdSaIdEE4sizeEv:           # @_ZNKSt6vectorIdSaIdEE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	8(%rdi), %rax
	movq	(%rdi), %rdi
	subq	%rdi, %rax
	sarq	$3, %rax
	popq	%rbp
	retq
.Lfunc_end24:
	.size	_ZNKSt6vectorIdSaIdEE4sizeEv, .Lfunc_end24-_ZNKSt6vectorIdSaIdEE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEED2Ev,"axG",@progbits,_ZNSt6vectorIdSaIdEED2Ev,comdat
	.weak	_ZNSt6vectorIdSaIdEED2Ev # -- Begin function _ZNSt6vectorIdSaIdEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEED2Ev,@function
_ZNSt6vectorIdSaIdEED2Ev:               # @_ZNSt6vectorIdSaIdEED2Ev
.Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception6
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
.Ltmp77:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E
.Ltmp78:
	jmp	.LBB25_1
.LBB25_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIdSaIdEED2Ev
	addq	$48, %rsp
	popq	%rbp
	retq
.LBB25_2:
.Ltmp79:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIdSaIdEED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end25:
	.size	_ZNSt6vectorIdSaIdEED2Ev, .Lfunc_end25-_ZNSt6vectorIdSaIdEED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table25:
.Lexception6:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	21                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	13                      # Call site table length
	.long	.Ltmp77-.Lfunc_begin6   # >> Call Site 1 <<
	.long	.Ltmp78-.Ltmp77         #   Call between .Ltmp77 and .Ltmp78
	.long	.Ltmp79-.Lfunc_begin6   #     jumps to .Ltmp79
	.byte	1                       #   On action: 1
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEC2Ev,"axG",@progbits,_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEC2Ev,comdat
	.weak	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEC2Ev # -- Begin function _ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEC2Ev,@function
_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEC2Ev: # @_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end26:
	.size	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEC2Ev, .Lfunc_end26-_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapIddSt4lessIdESaISt4pairIKddEEED2Ev,"axG",@progbits,_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEED2Ev,comdat
	.weak	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEED2Ev # -- Begin function _ZNSt3mapIddSt4lessIdESaISt4pairIKddEEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEED2Ev,@function
_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEED2Ev: # @_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EED2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end27:
	.size	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEED2Ev, .Lfunc_end27-_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EEC2Ev,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EEC2Ev,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EEC2Ev # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EEC2Ev,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EEC2Ev: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end28:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EEC2Ev, .Lfunc_end28-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt20_Rb_tree_key_compareISt4lessIdEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	addq	$8, %rax
	movq	%rax, %rdi
	callq	_ZNSt15_Rb_tree_headerC2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end29:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev, .Lfunc_end29-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev,"axG",@progbits,_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev,comdat
	.weak	_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev # -- Begin function _ZNSaISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev,@function
_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev: # @_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end30:
	.size	_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev, .Lfunc_end30-_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt20_Rb_tree_key_compareISt4lessIdEEC2Ev,"axG",@progbits,_ZNSt20_Rb_tree_key_compareISt4lessIdEEC2Ev,comdat
	.weak	_ZNSt20_Rb_tree_key_compareISt4lessIdEEC2Ev # -- Begin function _ZNSt20_Rb_tree_key_compareISt4lessIdEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt20_Rb_tree_key_compareISt4lessIdEEC2Ev,@function
_ZNSt20_Rb_tree_key_compareISt4lessIdEEC2Ev: # @_ZNSt20_Rb_tree_key_compareISt4lessIdEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	retq
.Lfunc_end31:
	.size	_ZNSt20_Rb_tree_key_compareISt4lessIdEEC2Ev, .Lfunc_end31-_ZNSt20_Rb_tree_key_compareISt4lessIdEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Rb_tree_headerC2Ev,"axG",@progbits,_ZNSt15_Rb_tree_headerC2Ev,comdat
	.weak	_ZNSt15_Rb_tree_headerC2Ev # -- Begin function _ZNSt15_Rb_tree_headerC2Ev
	.p2align	4, 0x90
	.type	_ZNSt15_Rb_tree_headerC2Ev,@function
_ZNSt15_Rb_tree_headerC2Ev:             # @_ZNSt15_Rb_tree_headerC2Ev
.Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception7
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movl	$0, (%rdi)
.Ltmp80:
	callq	_ZNSt15_Rb_tree_header8_M_resetEv
.Ltmp81:
	jmp	.LBB32_1
.LBB32_1:
	addq	$16, %rsp
	popq	%rbp
	retq
.LBB32_2:
.Ltmp82:
	movl	%edx, %ecx
	movq	%rax, %rdi
	movl	%ecx, -12(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.Lfunc_end32:
	.size	_ZNSt15_Rb_tree_headerC2Ev, .Lfunc_end32-_ZNSt15_Rb_tree_headerC2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table32:
.Lexception7:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	21                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	13                      # Call site table length
	.long	.Ltmp80-.Lfunc_begin7   # >> Call Site 1 <<
	.long	.Ltmp81-.Ltmp80         #   Call between .Ltmp80 and .Ltmp81
	.long	.Ltmp82-.Lfunc_begin7   #     jumps to .Ltmp82
	.byte	1                       #   On action: 1
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	retq
.Lfunc_end33:
	.size	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev, .Lfunc_end33-_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Rb_tree_header8_M_resetEv,"axG",@progbits,_ZNSt15_Rb_tree_header8_M_resetEv,comdat
	.weak	_ZNSt15_Rb_tree_header8_M_resetEv # -- Begin function _ZNSt15_Rb_tree_header8_M_resetEv
	.p2align	4, 0x90
	.type	_ZNSt15_Rb_tree_header8_M_resetEv,@function
_ZNSt15_Rb_tree_header8_M_resetEv:      # @_ZNSt15_Rb_tree_header8_M_resetEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	$0, 8(%rdi)
	movq	%rdi, 16(%rdi)
	movq	%rdi, 24(%rdi)
	movq	$0, 32(%rdi)
	popq	%rbp
	retq
.Lfunc_end34:
	.size	_ZNSt15_Rb_tree_header8_M_resetEv, .Lfunc_end34-_ZNSt15_Rb_tree_header8_M_resetEv
	.cfi_endproc
                                        # -- End function
	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate  # -- Begin function __clang_call_terminate
	.weak	__clang_call_terminate
	.p2align	4, 0x90
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 # @__clang_call_terminate
# %bb.0:
	pushq	%rax
	callq	__cxa_begin_catch
	movq	%rax, (%rsp)            # 8-byte Spill
	callq	_ZSt9terminatev
.Lfunc_end35:
	.size	__clang_call_terminate, .Lfunc_end35-__clang_call_terminate
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EED2Ev,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EED2Ev,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EED2Ev # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EED2Ev,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EED2Ev: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EED2Ev
.Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception8
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv
.Ltmp83:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
.Ltmp84:
	jmp	.LBB36_1
.LBB36_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev
	addq	$32, %rsp
	popq	%rbp
	retq
.LBB36_2:
.Ltmp85:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end36:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EED2Ev, .Lfunc_end36-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table36:
.Lexception8:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	21                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	13                      # Call site table length
	.long	.Ltmp83-.Lfunc_begin8   # >> Call Site 1 <<
	.long	.Ltmp84-.Ltmp83         #   Call between .Ltmp83 and .Ltmp84
	.long	.Ltmp85-.Lfunc_begin8   #     jumps to .Ltmp85
	.byte	1                       #   On action: 1
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, -32(%rbp)         # 8-byte Spill
.LBB37_1:                               # =>This Inner Loop Header: Depth=1
	cmpq	$0, -16(%rbp)
	je	.LBB37_3
# %bb.2:                                #   in Loop: Header=BB37_1 Depth=1
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	jmp	.LBB37_1
.LBB37_3:
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end37:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E, .Lfunc_end37-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	16(%rdi), %rdi
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end38:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv, .Lfunc_end38-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end39:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev, .Lfunc_end39-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	24(%rdi), %rdi
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end40:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base, .Lfunc_end40-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	16(%rdi), %rdi
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end41:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base, .Lfunc_end41-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	%rsi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E
	movq	-16(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end42:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E, .Lfunc_end42-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E
.Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception9
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE21_M_get_Node_allocatorEv
	movq	-16(%rbp), %rdi
.Ltmp86:
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv
.Ltmp87:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB43_1
.LBB43_1:
.Ltmp88:
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	-32(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE7destroyIS3_EEvRS5_PT_
.Ltmp89:
	jmp	.LBB43_2
.LBB43_2:
	addq	$48, %rsp
	popq	%rbp
	retq
.LBB43_3:
.Ltmp90:
	movl	%edx, %ecx
	movq	%rax, %rdi
	movl	%ecx, -36(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.Lfunc_end43:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E, .Lfunc_end43-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table43:
.Lexception9:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	21                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	13                      # Call site table length
	.long	.Ltmp86-.Lfunc_begin9   # >> Call Site 1 <<
	.long	.Ltmp89-.Ltmp86         #   Call between .Ltmp86 and .Ltmp89
	.long	.Ltmp90-.Lfunc_begin9   #     jumps to .Ltmp90
	.byte	1                       #   On action: 1
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E
.Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception10
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE21_M_get_Node_allocatorEv
	movq	-16(%rbp), %rsi
.Ltmp91:
	movl	$1, %ecx
	movl	%ecx, %edx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE10deallocateERS5_PS4_m
.Ltmp92:
	jmp	.LBB44_1
.LBB44_1:
	addq	$32, %rsp
	popq	%rbp
	retq
.LBB44_2:
.Ltmp93:
	movl	%edx, %ecx
	movq	%rax, %rdi
	movl	%ecx, -20(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.Lfunc_end44:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E, .Lfunc_end44-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table44:
.Lexception10:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	21                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	13                      # Call site table length
	.long	.Ltmp91-.Lfunc_begin10  # >> Call Site 1 <<
	.long	.Ltmp92-.Ltmp91         #   Call between .Ltmp91 and .Ltmp92
	.long	.Ltmp93-.Lfunc_begin10  #     jumps to .Ltmp93
	.byte	1                       #   On action: 1
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE7destroyIS3_EEvRS5_PT_,"axG",@progbits,_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE7destroyIS3_EEvRS5_PT_,comdat
	.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE7destroyIS3_EEvRS5_PT_ # -- Begin function _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE7destroyIS3_EEvRS5_PT_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE7destroyIS3_EEvRS5_PT_,@function
_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE7destroyIS3_EEvRS5_PT_: # @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE7destroyIS3_EEvRS5_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE7destroyIS4_EEvPT_
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end45:
	.size	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE7destroyIS3_EEvRS5_PT_, .Lfunc_end45-_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE7destroyIS3_EEvRS5_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE21_M_get_Node_allocatorEv,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE21_M_get_Node_allocatorEv,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE21_M_get_Node_allocatorEv # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE21_M_get_Node_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE21_M_get_Node_allocatorEv,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE21_M_get_Node_allocatorEv: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE21_M_get_Node_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end46:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE21_M_get_Node_allocatorEv, .Lfunc_end46-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE21_M_get_Node_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv,"axG",@progbits,_ZNSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv,comdat
	.weak	_ZNSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv # -- Begin function _ZNSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv
	.p2align	4, 0x90
	.type	_ZNSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv,@function
_ZNSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv: # @_ZNSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$32, %rdi
	callq	_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end47:
	.size	_ZNSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv, .Lfunc_end47-_ZNSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE7destroyIS4_EEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE7destroyIS4_EEvPT_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE7destroyIS4_EEvPT_ # -- Begin function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE7destroyIS4_EEvPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE7destroyIS4_EEvPT_,@function
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE7destroyIS4_EEvPT_: # @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE7destroyIS4_EEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	retq
.Lfunc_end48:
	.size	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE7destroyIS4_EEvPT_, .Lfunc_end48-_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE7destroyIS4_EEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv,"axG",@progbits,_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv,comdat
	.weak	_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv # -- Begin function _ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv,@function
_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv: # @_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end49:
	.size	_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv, .Lfunc_end49-_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv,"axG",@progbits,_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv,comdat
	.weak	_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv # -- Begin function _ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv,@function
_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv: # @_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end50:
	.size	_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv, .Lfunc_end50-_ZN9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE10deallocateERS5_PS4_m,"axG",@progbits,_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE10deallocateERS5_PS4_m,comdat
	.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE10deallocateERS5_PS4_m # -- Begin function _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE10deallocateERS5_PS4_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE10deallocateERS5_PS4_m,@function
_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE10deallocateERS5_PS4_m: # @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE10deallocateERS5_PS4_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rdx, %rdi
	movq	-32(%rbp), %rdx         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE10deallocateEPS5_m
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end51:
	.size	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE10deallocateERS5_PS4_m, .Lfunc_end51-_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE10deallocateERS5_PS4_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE10deallocateEPS5_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE10deallocateEPS5_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE10deallocateEPS5_m # -- Begin function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE10deallocateEPS5_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE10deallocateEPS5_m,@function
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE10deallocateEPS5_m: # @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE10deallocateEPS5_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end52:
	.size	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE10deallocateEPS5_m, .Lfunc_end52-_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE10deallocateEPS5_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaISt13_Rb_tree_nodeISt4pairIKddEEED2Ev,"axG",@progbits,_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEED2Ev,comdat
	.weak	_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEED2Ev # -- Begin function _ZNSaISt13_Rb_tree_nodeISt4pairIKddEEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEED2Ev,@function
_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEED2Ev: # @_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end53:
	.size	_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEED2Ev, .Lfunc_end53-_ZNSaISt13_Rb_tree_nodeISt4pairIKddEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEED2Ev: # @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	retq
.Lfunc_end54:
	.size	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEED2Ev, .Lfunc_end54-_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv,"axG",@progbits,_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv,comdat
	.weak	_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv # -- Begin function _ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv
	.p2align	4, 0x90
	.type	_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv,@function
_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv: # @_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	callq	_ZNSt6chrono15duration_valuesIlE4zeroEv
	leaq	-8(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	movq	%rax, -16(%rbp)
	callq	_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end55:
	.size	_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv, .Lfunc_end55-_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6chrono15duration_valuesIlE4zeroEv,"axG",@progbits,_ZNSt6chrono15duration_valuesIlE4zeroEv,comdat
	.weak	_ZNSt6chrono15duration_valuesIlE4zeroEv # -- Begin function _ZNSt6chrono15duration_valuesIlE4zeroEv
	.p2align	4, 0x90
	.type	_ZNSt6chrono15duration_valuesIlE4zeroEv,@function
_ZNSt6chrono15duration_valuesIlE4zeroEv: # @_ZNSt6chrono15duration_valuesIlE4zeroEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	xorl	%eax, %eax
                                        # kill: def %rax killed %eax
	popq	%rbp
	retq
.Lfunc_end56:
	.size	_ZNSt6chrono15duration_valuesIlE4zeroEv, .Lfunc_end56-_ZNSt6chrono15duration_valuesIlE4zeroEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_,"axG",@progbits,_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_,comdat
	.weak	_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_ # -- Begin function _ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_
	.p2align	4, 0x90
	.type	_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_,@function
_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_: # @_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rdi
	movq	%rdi, (%rsi)
	popq	%rbp
	retq
.Lfunc_end57:
	.size	_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_, .Lfunc_end57-_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN3BOA12random_priceEdd
.LCPI58_0:
	.quad	4746794007244308480     # double 2147483647
	.section	.text._ZN3BOA12random_priceEdd,"axG",@progbits,_ZN3BOA12random_priceEdd,comdat
	.weak	_ZN3BOA12random_priceEdd
	.p2align	4, 0x90
	.type	_ZN3BOA12random_priceEdd,@function
_ZN3BOA12random_priceEdd:               # @_ZN3BOA12random_priceEdd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -24(%rbp)
	callq	rand
	movsd	.LCPI58_0(%rip), %xmm0  # xmm0 = mem[0],zero
	cvtsi2sdl	%eax, %xmm1
	divsd	%xmm0, %xmm1
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	subsd	-16(%rbp), %xmm0
	mulsd	%xmm0, %xmm1
	addsd	-16(%rbp), %xmm1
	movaps	%xmm1, %xmm0
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end58:
	.size	_ZN3BOA12random_priceEdd, .Lfunc_end58-_ZN3BOA12random_priceEdd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN3BOA13random_volumeEdd
.LCPI59_0:
	.quad	4746794007244308480     # double 2147483647
	.section	.text._ZN3BOA13random_volumeEdd,"axG",@progbits,_ZN3BOA13random_volumeEdd,comdat
	.weak	_ZN3BOA13random_volumeEdd
	.p2align	4, 0x90
	.type	_ZN3BOA13random_volumeEdd,@function
_ZN3BOA13random_volumeEdd:              # @_ZN3BOA13random_volumeEdd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -24(%rbp)
	callq	rand
	movsd	.LCPI59_0(%rip), %xmm0  # xmm0 = mem[0],zero
	cvtsi2sdl	%eax, %xmm1
	divsd	%xmm0, %xmm1
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	subsd	-16(%rbp), %xmm0
	mulsd	%xmm0, %xmm1
	addsd	-16(%rbp), %xmm1
	movaps	%xmm1, %xmm0
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end59:
	.size	_ZN3BOA13random_volumeEdd, .Lfunc_end59-_ZN3BOA13random_volumeEdd
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN3BOA11sideOfOrderB5cxx11Ev,"axG",@progbits,_ZN3BOA11sideOfOrderB5cxx11Ev,comdat
	.weak	_ZN3BOA11sideOfOrderB5cxx11Ev # -- Begin function _ZN3BOA11sideOfOrderB5cxx11Ev
	.p2align	4, 0x90
	.type	_ZN3BOA11sideOfOrderB5cxx11Ev,@function
_ZN3BOA11sideOfOrderB5cxx11Ev:          # @_ZN3BOA11sideOfOrderB5cxx11Ev
.Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception11
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	callq	rand
	movl	$2, %ecx
	cltd
	idivl	%ecx
	movl	%edx, -12(%rbp)
	cmpl	$0, -12(%rbp)
	jne	.LBB60_4
# %bb.1:
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNSaIcEC1Ev
.Ltmp97:
	movl	$.L.str.3, %ecx
	movl	%ecx, %esi
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	-56(%rbp), %rdx         # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
.Ltmp98:
	jmp	.LBB60_2
.LBB60_2:
	leaq	-16(%rbp), %rdi
	callq	_ZNSaIcED1Ev
	jmp	.LBB60_7
.LBB60_3:
.Ltmp99:
	leaq	-16(%rbp), %rdi
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
	callq	_ZNSaIcED1Ev
	jmp	.LBB60_8
.LBB60_4:
	leaq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNSaIcEC1Ev
.Ltmp94:
	movl	$.L.str.2, %ecx
	movl	%ecx, %esi
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rdx         # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
.Ltmp95:
	jmp	.LBB60_5
.LBB60_5:
	leaq	-32(%rbp), %rdi
	callq	_ZNSaIcED1Ev
	jmp	.LBB60_7
.LBB60_6:
.Ltmp96:
	leaq	-32(%rbp), %rdi
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
	callq	_ZNSaIcED1Ev
	jmp	.LBB60_8
.LBB60_7:
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	retq
.LBB60_8:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.Lfunc_end60:
	.size	_ZN3BOA11sideOfOrderB5cxx11Ev, .Lfunc_end60-_ZN3BOA11sideOfOrderB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table60:
.Lexception11:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	41                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	39                      # Call site table length
	.long	.Ltmp97-.Lfunc_begin11  # >> Call Site 1 <<
	.long	.Ltmp98-.Ltmp97         #   Call between .Ltmp97 and .Ltmp98
	.long	.Ltmp99-.Lfunc_begin11  #     jumps to .Ltmp99
	.byte	0                       #   On action: cleanup
	.long	.Ltmp94-.Lfunc_begin11  # >> Call Site 2 <<
	.long	.Ltmp95-.Ltmp94         #   Call between .Ltmp94 and .Ltmp95
	.long	.Ltmp96-.Lfunc_begin11  #     jumps to .Ltmp96
	.byte	0                       #   On action: cleanup
	.long	.Ltmp95-.Lfunc_begin11  # >> Call Site 3 <<
	.long	.Lfunc_end60-.Ltmp95    #   Call between .Ltmp95 and .Lfunc_end60
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEixERS3_,"axG",@progbits,_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEixERS3_,comdat
	.weak	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEixERS3_ # -- Begin function _ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEixERS3_
	.p2align	4, 0x90
	.type	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEixERS3_,@function
_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEixERS3_: # @_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEixERS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -80(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-80(%rbp), %rax         # 8-byte Reload
	movq	%rsi, -88(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE11lower_boundERS3_
	movq	%rax, -24(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE3endEv
	leaq	-24(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	movq	%rax, -32(%rbp)
	callq	_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEeqERKS3_
	movb	$1, %cl
	testb	$1, %al
	movb	%cl, -89(%rbp)          # 1-byte Spill
	jne	.LBB61_2
# %bb.1:
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt3mapIddSt4lessIdESaISt4pairIKddEEE8key_compEv
	leaq	-24(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	%rsi, -104(%rbp)        # 8-byte Spill
	callq	_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEdeEv
	leaq	-40(%rbp), %rdi
	movq	-104(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNKSt4lessIdEclERKdS2_
	movb	%al, -89(%rbp)          # 1-byte Spill
.LBB61_2:
	movb	-89(%rbp), %al          # 1-byte Reload
	testb	$1, %al
	jne	.LBB61_3
	jmp	.LBB61_4
.LBB61_3:
	leaq	-56(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E
	leaq	-64(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt5tupleIJRKdEEC2IvLb1EEES1_
	movabsq	$_ZStL19piecewise_construct, %rdx
	leaq	-64(%rbp), %rcx
	leaq	-72(%rbp), %r8
	movq	-56(%rbp), %rsi
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -24(%rbp)
.LBB61_4:
	leaq	-24(%rbp), %rdi
	callq	_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEdeEv
	addq	$8, %rax
	addq	$112, %rsp
	popq	%rbp
	retq
.Lfunc_end61:
	.size	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEixERS3_, .Lfunc_end61-_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEEixERS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE5eraseERS3_,"axG",@progbits,_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE5eraseERS3_,comdat
	.weak	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE5eraseERS3_ # -- Begin function _ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE5eraseERS3_
	.p2align	4, 0x90
	.type	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE5eraseERS3_,@function
_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE5eraseERS3_: # @_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE5eraseERS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5eraseERS1_
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end62:
	.size	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE5eraseERS3_, .Lfunc_end62-_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE5eraseERS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE11lower_boundERS3_,"axG",@progbits,_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE11lower_boundERS3_,comdat
	.weak	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE11lower_boundERS3_ # -- Begin function _ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE11lower_boundERS3_
	.p2align	4, 0x90
	.type	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE11lower_boundERS3_,@function
_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE11lower_boundERS3_: # @_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE11lower_boundERS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11lower_boundERS1_
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end63:
	.size	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE11lower_boundERS3_, .Lfunc_end63-_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE11lower_boundERS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt17_Rb_tree_iteratorISt4pairIKddEEeqERKS3_,"axG",@progbits,_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEeqERKS3_,comdat
	.weak	_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEeqERKS3_ # -- Begin function _ZNKSt17_Rb_tree_iteratorISt4pairIKddEEeqERKS3_
	.p2align	4, 0x90
	.type	_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEeqERKS3_,@function
_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEeqERKS3_: # @_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEeqERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rbp), %rdi
	cmpq	(%rdi), %rsi
	sete	%al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	retq
.Lfunc_end64:
	.size	_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEeqERKS3_, .Lfunc_end64-_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEeqERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE3endEv,"axG",@progbits,_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE3endEv,comdat
	.weak	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE3endEv # -- Begin function _ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE3endEv
	.p2align	4, 0x90
	.type	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE3endEv,@function
_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE3endEv: # @_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE3endEv
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end65:
	.size	_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE3endEv, .Lfunc_end65-_ZNSt3mapIddSt4lessIdESaISt4pairIKddEEE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt3mapIddSt4lessIdESaISt4pairIKddEEE8key_compEv,"axG",@progbits,_ZNKSt3mapIddSt4lessIdESaISt4pairIKddEEE8key_compEv,comdat
	.weak	_ZNKSt3mapIddSt4lessIdESaISt4pairIKddEEE8key_compEv # -- Begin function _ZNKSt3mapIddSt4lessIdESaISt4pairIKddEEE8key_compEv
	.p2align	4, 0x90
	.type	_ZNKSt3mapIddSt4lessIdESaISt4pairIKddEEE8key_compEv,@function
_ZNKSt3mapIddSt4lessIdESaISt4pairIKddEEE8key_compEv: # @_ZNKSt3mapIddSt4lessIdESaISt4pairIKddEEE8key_compEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8key_compEv
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end66:
	.size	_ZNKSt3mapIddSt4lessIdESaISt4pairIKddEEE8key_compEv, .Lfunc_end66-_ZNKSt3mapIddSt4lessIdESaISt4pairIKddEEE8key_compEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt4lessIdEclERKdS2_,"axG",@progbits,_ZNKSt4lessIdEclERKdS2_,comdat
	.weak	_ZNKSt4lessIdEclERKdS2_ # -- Begin function _ZNKSt4lessIdEclERKdS2_
	.p2align	4, 0x90
	.type	_ZNKSt4lessIdEclERKdS2_,@function
_ZNKSt4lessIdEclERKdS2_:                # @_ZNKSt4lessIdEclERKdS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movsd	(%rdx), %xmm0           # xmm0 = mem[0],zero
	movq	-24(%rbp), %rdx
	movsd	(%rdx), %xmm1           # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	seta	%al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	retq
.Lfunc_end67:
	.size	_ZNKSt4lessIdEclERKdS2_, .Lfunc_end67-_ZNKSt4lessIdEclERKdS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt17_Rb_tree_iteratorISt4pairIKddEEdeEv,"axG",@progbits,_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEdeEv,comdat
	.weak	_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEdeEv # -- Begin function _ZNKSt17_Rb_tree_iteratorISt4pairIKddEEdeEv
	.p2align	4, 0x90
	.type	_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEdeEv,@function
_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEdeEv: # @_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEdeEv
.Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception12
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rdi
.Ltmp100:
	callq	_ZNSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv
.Ltmp101:
	movq	%rax, -16(%rbp)         # 8-byte Spill
	jmp	.LBB68_1
.LBB68_1:
	movq	-16(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	retq
.LBB68_2:
.Ltmp102:
	movl	%edx, %ecx
	movq	%rax, %rdi
	movl	%ecx, -20(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.Lfunc_end68:
	.size	_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEdeEv, .Lfunc_end68-_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEdeEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table68:
.Lexception12:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	21                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	13                      # Call site table length
	.long	.Ltmp100-.Lfunc_begin12 # >> Call Site 1 <<
	.long	.Ltmp101-.Ltmp100       #   Call between .Ltmp100 and .Ltmp101
	.long	.Ltmp102-.Lfunc_begin12 #     jumps to .Ltmp102
	.byte	1                       #   On action: 1
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_ # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_
.Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception13
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$176, %rsp
	movq	%rsi, -16(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	%r8, -48(%rbp)
	movq	-24(%rbp), %rcx
	movq	-32(%rbp), %rdi
	movq	%rcx, -104(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
	movq	-40(%rbp), %rdi
	movq	%rax, -112(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-48(%rbp), %rdi
	movq	%rax, -120(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-104(%rbp), %rdi        # 8-byte Reload
	movq	-112(%rbp), %rsi        # 8-byte Reload
	movq	-120(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_
	movq	%rax, -56(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-56(%rbp), %rdi
.Ltmp103:
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E
.Ltmp104:
	movq	%rax, -128(%rbp)        # 8-byte Spill
	jmp	.LBB69_1
.LBB69_1:
	movq	-80(%rbp), %rsi
.Ltmp105:
	movq	-104(%rbp), %rdi        # 8-byte Reload
	movq	-128(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_
.Ltmp106:
	movq	%rdx, -136(%rbp)        # 8-byte Spill
	movq	%rax, -144(%rbp)        # 8-byte Spill
	jmp	.LBB69_2
.LBB69_2:
	movq	-144(%rbp), %rax        # 8-byte Reload
	movq	%rax, -72(%rbp)
	movq	-136(%rbp), %rax        # 8-byte Reload
	movq	%rax, -64(%rbp)
	cmpq	$0, -64(%rbp)
	je	.LBB69_7
# %bb.3:
	movq	-72(%rbp), %rsi
	movq	-64(%rbp), %rdx
	movq	-56(%rbp), %rcx
.Ltmp107:
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E
.Ltmp108:
	movq	%rax, -152(%rbp)        # 8-byte Spill
	jmp	.LBB69_4
.LBB69_4:
	movq	-152(%rbp), %rax        # 8-byte Reload
	movq	%rax, -8(%rbp)
	jmp	.LBB69_10
.LBB69_5:
.Ltmp109:
	movl	%edx, %ecx
	movq	%rax, -88(%rbp)
	movl	%ecx, -92(%rbp)
# %bb.6:
	movq	-88(%rbp), %rdi
	callq	__cxa_begin_catch
	movq	-56(%rbp), %rsi
	movq	-104(%rbp), %rdi        # 8-byte Reload
	movq	%rax, -160(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E
.Ltmp110:
	callq	__cxa_rethrow
.Ltmp111:
	jmp	.LBB69_13
.LBB69_7:
	movq	-56(%rbp), %rsi
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E
	leaq	-8(%rbp), %rdi
	movq	-72(%rbp), %rsi
	callq	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base
	jmp	.LBB69_10
.LBB69_8:
.Ltmp112:
	movl	%edx, %ecx
	movq	%rax, -88(%rbp)
	movl	%ecx, -92(%rbp)
.Ltmp113:
	callq	__cxa_end_catch
.Ltmp114:
	jmp	.LBB69_9
.LBB69_9:
	jmp	.LBB69_11
.LBB69_10:
	movq	-8(%rbp), %rax
	addq	$176, %rsp
	popq	%rbp
	retq
.LBB69_11:
	movq	-88(%rbp), %rdi
	callq	_Unwind_Resume
.LBB69_12:
.Ltmp115:
	movl	%edx, %ecx
	movq	%rax, %rdi
	movl	%ecx, -164(%rbp)        # 4-byte Spill
	callq	__clang_call_terminate
.LBB69_13:
.Lfunc_end69:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_, .Lfunc_end69-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table69:
.Lexception13:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	"\326\200\200"          # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	78                      # Call site table length
	.long	.Lfunc_begin13-.Lfunc_begin13 # >> Call Site 1 <<
	.long	.Ltmp103-.Lfunc_begin13 #   Call between .Lfunc_begin13 and .Ltmp103
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.long	.Ltmp103-.Lfunc_begin13 # >> Call Site 2 <<
	.long	.Ltmp108-.Ltmp103       #   Call between .Ltmp103 and .Ltmp108
	.long	.Ltmp109-.Lfunc_begin13 #     jumps to .Ltmp109
	.byte	1                       #   On action: 1
	.long	.Ltmp108-.Lfunc_begin13 # >> Call Site 3 <<
	.long	.Ltmp110-.Ltmp108       #   Call between .Ltmp108 and .Ltmp110
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.long	.Ltmp110-.Lfunc_begin13 # >> Call Site 4 <<
	.long	.Ltmp111-.Ltmp110       #   Call between .Ltmp110 and .Ltmp111
	.long	.Ltmp112-.Lfunc_begin13 #     jumps to .Ltmp112
	.byte	0                       #   On action: cleanup
	.long	.Ltmp113-.Lfunc_begin13 # >> Call Site 5 <<
	.long	.Ltmp114-.Ltmp113       #   Call between .Ltmp113 and .Ltmp114
	.long	.Ltmp115-.Lfunc_begin13 #     jumps to .Ltmp115
	.byte	1                       #   On action: 1
	.long	.Ltmp114-.Lfunc_begin13 # >> Call Site 6 <<
	.long	.Lfunc_end69-.Ltmp114   #   Call between .Ltmp114 and .Lfunc_end69
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E,"axG",@progbits,_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E,comdat
	.weak	_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E # -- Begin function _ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E
	.p2align	4, 0x90
	.type	_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E,@function
_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E: # @_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rdi
	movq	%rdi, (%rsi)
	popq	%rbp
	retq
.Lfunc_end70:
	.size	_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E, .Lfunc_end70-_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5tupleIJRKdEEC2IvLb1EEES1_,"axG",@progbits,_ZNSt5tupleIJRKdEEC2IvLb1EEES1_,comdat
	.weak	_ZNSt5tupleIJRKdEEC2IvLb1EEES1_ # -- Begin function _ZNSt5tupleIJRKdEEC2IvLb1EEES1_
	.p2align	4, 0x90
	.type	_ZNSt5tupleIJRKdEEC2IvLb1EEES1_,@function
_ZNSt5tupleIJRKdEEC2IvLb1EEES1_:        # @_ZNSt5tupleIJRKdEEC2IvLb1EEES1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt11_Tuple_implILm0EJRKdEEC2ES1_
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end71:
	.size	_ZNSt5tupleIJRKdEEC2IvLb1EEES1_, .Lfunc_end71-_ZNSt5tupleIJRKdEEC2IvLb1EEES1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11lower_boundERS1_,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11lower_boundERS1_,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11lower_boundERS1_ # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11lower_boundERS1_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11lower_boundERS1_,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11lower_boundERS1_: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11lower_boundERS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	%rsi, %rdi
	movq	%rsi, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv
	movq	-24(%rbp), %rcx
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end72:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11lower_boundERS1_, .Lfunc_end72-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11lower_boundERS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_ # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rcx
	movq	%rcx, -48(%rbp)         # 8-byte Spill
.LBB73_1:                               # =>This Inner Loop Header: Depth=1
	cmpq	$0, -24(%rbp)
	je	.LBB73_6
# %bb.2:                                #   in Loop: Header=BB73_1 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-24(%rbp), %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E
	movq	-40(%rbp), %rdx
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNKSt4lessIdEclERKdS2_
	testb	$1, %al
	jne	.LBB73_4
# %bb.3:                                #   in Loop: Header=BB73_1 Depth=1
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base
	movq	%rax, -24(%rbp)
	jmp	.LBB73_5
.LBB73_4:                               #   in Loop: Header=BB73_1 Depth=1
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base
	movq	%rax, -24(%rbp)
.LBB73_5:                               #   in Loop: Header=BB73_1 Depth=1
	jmp	.LBB73_1
.LBB73_6:
	leaq	-8(%rbp), %rdi
	movq	-32(%rbp), %rsi
	callq	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base
	movq	-8(%rbp), %rax
	addq	$64, %rsp
	popq	%rbp
	retq
.Lfunc_end73:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_, .Lfunc_end73-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$8, %rdi
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end74:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv, .Lfunc_end74-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZNKSt10_Select1stISt4pairIKddEEclERKS2_
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end75:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E, .Lfunc_end75-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base,"axG",@progbits,_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base,comdat
	.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base # -- Begin function _ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base
	.p2align	4, 0x90
	.type	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base,@function
_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base: # @_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, (%rsi)
	popq	%rbp
	retq
.Lfunc_end76:
	.size	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base, .Lfunc_end76-_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt10_Select1stISt4pairIKddEEclERKS2_,"axG",@progbits,_ZNKSt10_Select1stISt4pairIKddEEclERKS2_,comdat
	.weak	_ZNKSt10_Select1stISt4pairIKddEEclERKS2_ # -- Begin function _ZNKSt10_Select1stISt4pairIKddEEclERKS2_
	.p2align	4, 0x90
	.type	_ZNKSt10_Select1stISt4pairIKddEEclERKS2_,@function
_ZNKSt10_Select1stISt4pairIKddEEclERKS2_: # @_ZNKSt10_Select1stISt4pairIKddEEclERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end77:
	.size	_ZNKSt10_Select1stISt4pairIKddEEclERKS2_, .Lfunc_end77-_ZNKSt10_Select1stISt4pairIKddEEclERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end78:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E, .Lfunc_end78-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv,"axG",@progbits,_ZNKSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv,comdat
	.weak	_ZNKSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv # -- Begin function _ZNKSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv
	.p2align	4, 0x90
	.type	_ZNKSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv,@function
_ZNKSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv: # @_ZNKSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$32, %rdi
	callq	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end79:
	.size	_ZNKSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv, .Lfunc_end79-_ZNKSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv,"axG",@progbits,_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv,comdat
	.weak	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv # -- Begin function _ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv,@function
_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv: # @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end80:
	.size	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv, .Lfunc_end80-_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE6_M_ptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv,"axG",@progbits,_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv,comdat
	.weak	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv # -- Begin function _ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv,@function
_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv: # @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end81:
	.size	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv, .Lfunc_end81-_ZNK9__gnu_cxx16__aligned_membufISt4pairIKddEE7_M_addrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE3endEv,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE3endEv,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE3endEv # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE3endEv
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE3endEv,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE3endEv: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	leaq	-8(%rbp), %rax
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	addq	$8, %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end82:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE3endEv, .Lfunc_end82-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8key_compEv,"axG",@progbits,_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8key_compEv,comdat
	.weak	_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8key_compEv # -- Begin function _ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8key_compEv
	.p2align	4, 0x90
	.type	_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8key_compEv,@function
_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8key_compEv: # @_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8key_compEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	popq	%rbp
	retq
.Lfunc_end83:
	.size	_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8key_compEv, .Lfunc_end83-_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8key_compEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_ # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rcx, %rdi
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_get_nodeEv
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rsi, -56(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
	movq	-24(%rbp), %rdi
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-32(%rbp), %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movq	-64(%rbp), %rdx         # 8-byte Reload
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movq	%rax, %r8
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_
	movq	-40(%rbp), %rax
	addq	$80, %rsp
	popq	%rbp
	retq
.Lfunc_end84:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_, .Lfunc_end84-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE,"axG",@progbits,_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE,comdat
	.weak	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE # -- Begin function _ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE,@function
_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE: # @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end85:
	.size	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE, .Lfunc_end85-_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE,"axG",@progbits,_ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE,comdat
	.weak	_ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE # -- Begin function _ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE,@function
_ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE: # @_ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end86:
	.size	_ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE, .Lfunc_end86-_ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE,comdat
	.weak	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE # -- Begin function _ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE,@function
_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE: # @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end87:
	.size	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE, .Lfunc_end87-_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_ # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$208, %rsp
	leaq	-24(%rbp), %rax
	movq	%rsi, -24(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rax, %rdi
	movq	%rdx, -112(%rbp)        # 8-byte Spill
	callq	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEE13_M_const_castEv
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%rax, -120(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv
	movq	-120(%rbp), %rdx        # 8-byte Reload
	cmpq	%rax, %rdx
	jne	.LBB88_5
# %bb.1:
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE4sizeEv
	cmpq	$0, %rax
	jbe	.LBB88_4
# %bb.2:
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%rax, -128(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_rightmostEv
	movq	(%rax), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base
	movq	-40(%rbp), %rdx
	movq	-128(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNKSt4lessIdEclERKdS2_
	testb	$1, %al
	jne	.LBB88_3
	jmp	.LBB88_4
.LBB88_3:
	movq	$0, -56(%rbp)
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_rightmostEv
	leaq	-16(%rbp), %rdi
	leaq	-56(%rbp), %rsi
	movq	%rax, %rdx
	callq	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_
	jmp	.LBB88_22
.LBB88_4:
	movq	-40(%rbp), %rsi
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE24_M_get_insert_unique_posERS1_
	movq	%rax, -16(%rbp)
	movq	%rdx, -8(%rbp)
	jmp	.LBB88_22
.LBB88_5:
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-40(%rbp), %rsi
	movq	-48(%rbp), %rdi
	movq	%rax, -136(%rbp)        # 8-byte Spill
	movq	%rsi, -144(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base
	movq	-136(%rbp), %rdi        # 8-byte Reload
	movq	-144(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNKSt4lessIdEclERKdS2_
	testb	$1, %al
	jne	.LBB88_6
	jmp	.LBB88_13
.LBB88_6:
	movq	-48(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-48(%rbp), %rax
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%rax, -152(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_leftmostEv
	movq	-152(%rbp), %rdi        # 8-byte Reload
	cmpq	(%rax), %rdi
	jne	.LBB88_8
# %bb.7:
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_leftmostEv
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%rax, -160(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_leftmostEv
	leaq	-16(%rbp), %rdi
	movq	-160(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_
	jmp	.LBB88_22
.LBB88_8:
	leaq	-64(%rbp), %rdi
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rax, -168(%rbp)        # 8-byte Spill
	callq	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEmmEv
	movq	(%rax), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base
	movq	-40(%rbp), %rdx
	movq	-168(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNKSt4lessIdEclERKdS2_
	testb	$1, %al
	jne	.LBB88_9
	jmp	.LBB88_12
.LBB88_9:
	movq	-64(%rbp), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base
	cmpq	$0, %rax
	jne	.LBB88_11
# %bb.10:
	leaq	-16(%rbp), %rdi
	leaq	-72(%rbp), %rsi
	leaq	-64(%rbp), %rdx
	movq	$0, -72(%rbp)
	callq	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_
	jmp	.LBB88_22
.LBB88_11:
	leaq	-16(%rbp), %rdi
	leaq	-48(%rbp), %rax
	movq	%rax, %rsi
	movq	%rax, %rdx
	callq	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_
	jmp	.LBB88_22
.LBB88_12:
	movq	-40(%rbp), %rsi
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE24_M_get_insert_unique_posERS1_
	movq	%rax, -16(%rbp)
	movq	%rdx, -8(%rbp)
	jmp	.LBB88_22
.LBB88_13:
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-48(%rbp), %rdi
	movq	%rax, -176(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base
	movq	-40(%rbp), %rdx
	movq	-176(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNKSt4lessIdEclERKdS2_
	testb	$1, %al
	jne	.LBB88_14
	jmp	.LBB88_21
.LBB88_14:
	movq	-48(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-48(%rbp), %rax
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%rax, -184(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_rightmostEv
	movq	-184(%rbp), %rdi        # 8-byte Reload
	cmpq	(%rax), %rdi
	jne	.LBB88_16
# %bb.15:
	movq	$0, -88(%rbp)
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_rightmostEv
	leaq	-16(%rbp), %rdi
	leaq	-88(%rbp), %rsi
	movq	%rax, %rdx
	callq	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_
	jmp	.LBB88_22
.LBB88_16:
	leaq	-80(%rbp), %rdi
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-40(%rbp), %rsi
	movq	%rsi, -192(%rbp)        # 8-byte Spill
	movq	%rax, -200(%rbp)        # 8-byte Spill
	callq	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEppEv
	movq	(%rax), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base
	movq	-200(%rbp), %rdi        # 8-byte Reload
	movq	-192(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNKSt4lessIdEclERKdS2_
	testb	$1, %al
	jne	.LBB88_17
	jmp	.LBB88_20
.LBB88_17:
	movq	-48(%rbp), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base
	cmpq	$0, %rax
	jne	.LBB88_19
# %bb.18:
	leaq	-16(%rbp), %rdi
	leaq	-96(%rbp), %rsi
	leaq	-48(%rbp), %rdx
	movq	$0, -96(%rbp)
	callq	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_
	jmp	.LBB88_22
.LBB88_19:
	leaq	-16(%rbp), %rdi
	leaq	-80(%rbp), %rax
	movq	%rax, %rsi
	movq	%rax, %rdx
	callq	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_
	jmp	.LBB88_22
.LBB88_20:
	movq	-40(%rbp), %rsi
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE24_M_get_insert_unique_posERS1_
	movq	%rax, -16(%rbp)
	movq	%rdx, -8(%rbp)
	jmp	.LBB88_22
.LBB88_21:
	leaq	-16(%rbp), %rdi
	leaq	-104(%rbp), %rdx
	leaq	-48(%rbp), %rsi
	movq	$0, -104(%rbp)
	callq	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_
.LBB88_22:
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rdx
	addq	$208, %rsp
	popq	%rbp
	retq
.Lfunc_end88:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_, .Lfunc_end88-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movb	$1, %al
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rcx
	cmpq	$0, -24(%rbp)
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	movb	%al, -57(%rbp)          # 1-byte Spill
	jne	.LBB89_3
# %bb.1:
	movq	-32(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv
	movb	$1, %cl
	movq	-72(%rbp), %rdi         # 8-byte Reload
	cmpq	%rax, %rdi
	movb	%cl, -57(%rbp)          # 1-byte Spill
	je	.LBB89_3
# %bb.2:
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	-40(%rbp), %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E
	movq	-32(%rbp), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movq	-88(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNKSt4lessIdEclERKdS2_
	movb	%al, -57(%rbp)          # 1-byte Spill
.LBB89_3:
	movb	-57(%rbp), %al          # 1-byte Reload
	andb	$1, %al
	movb	%al, -41(%rbp)
	movb	-41(%rbp), %al
	movq	-40(%rbp), %rcx
	movq	-32(%rbp), %rdx
	movq	-56(%rbp), %rsi         # 8-byte Reload
	addq	$8, %rsi
	andb	$1, %al
	movzbl	%al, %edi
	movq	%rsi, -96(%rbp)         # 8-byte Spill
	movq	%rcx, %rsi
	movq	-96(%rbp), %rcx         # 8-byte Reload
	callq	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
	leaq	-8(%rbp), %rdi
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movq	40(%rcx), %rdx
	addq	$1, %rdx
	movq	%rdx, 40(%rcx)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rsi
	callq	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base
	movq	-8(%rbp), %rax
	addq	$96, %rsp
	popq	%rbp
	retq
.Lfunc_end89:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E, .Lfunc_end89-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_get_nodeEv,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_get_nodeEv,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_get_nodeEv # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_get_nodeEv
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_get_nodeEv,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_get_nodeEv: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_get_nodeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE21_M_get_Node_allocatorEv
	movl	$1, %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE8allocateERS5_m
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end90:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_get_nodeEv, .Lfunc_end90-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_get_nodeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_ # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_
.Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception14
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	%r8, -40(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rcx, %rdi
	movq	%rcx, -64(%rbp)         # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE21_M_get_Node_allocatorEv
	movq	-16(%rbp), %rdi
.Ltmp116:
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv
.Ltmp117:
	movq	%rax, -80(%rbp)         # 8-byte Spill
	jmp	.LBB91_1
.LBB91_1:
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
	movq	-32(%rbp), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-40(%rbp), %rdi
	movq	%rax, -96(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
.Ltmp118:
	movq	-72(%rbp), %rdi         # 8-byte Reload
	movq	-80(%rbp), %rsi         # 8-byte Reload
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, %r8
	callq	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_
.Ltmp119:
	jmp	.LBB91_2
.LBB91_2:
	jmp	.LBB91_7
.LBB91_3:
.Ltmp120:
	movl	%edx, %ecx
	movq	%rax, -48(%rbp)
	movl	%ecx, -52(%rbp)
# %bb.4:
	movq	-48(%rbp), %rdi
	callq	__cxa_begin_catch
	movq	-16(%rbp), %rsi
	movq	-64(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E
.Ltmp121:
	callq	__cxa_rethrow
.Ltmp122:
	jmp	.LBB91_10
.LBB91_5:
.Ltmp123:
	movl	%edx, %ecx
	movq	%rax, -48(%rbp)
	movl	%ecx, -52(%rbp)
.Ltmp124:
	callq	__cxa_end_catch
.Ltmp125:
	jmp	.LBB91_6
.LBB91_6:
	jmp	.LBB91_8
.LBB91_7:
	addq	$112, %rsp
	popq	%rbp
	retq
.LBB91_8:
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume
.LBB91_9:
.Ltmp126:
	movl	%edx, %ecx
	movq	%rax, %rdi
	movl	%ecx, -108(%rbp)        # 4-byte Spill
	callq	__clang_call_terminate
.LBB91_10:
.Lfunc_end91:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_, .Lfunc_end91-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table91:
.Lexception14:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	73                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	65                      # Call site table length
	.long	.Ltmp116-.Lfunc_begin14 # >> Call Site 1 <<
	.long	.Ltmp119-.Ltmp116       #   Call between .Ltmp116 and .Ltmp119
	.long	.Ltmp120-.Lfunc_begin14 #     jumps to .Ltmp120
	.byte	1                       #   On action: 1
	.long	.Ltmp119-.Lfunc_begin14 # >> Call Site 2 <<
	.long	.Ltmp121-.Ltmp119       #   Call between .Ltmp119 and .Ltmp121
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.long	.Ltmp121-.Lfunc_begin14 # >> Call Site 3 <<
	.long	.Ltmp122-.Ltmp121       #   Call between .Ltmp121 and .Ltmp122
	.long	.Ltmp123-.Lfunc_begin14 #     jumps to .Ltmp123
	.byte	0                       #   On action: cleanup
	.long	.Ltmp124-.Lfunc_begin14 # >> Call Site 4 <<
	.long	.Ltmp125-.Ltmp124       #   Call between .Ltmp124 and .Ltmp125
	.long	.Ltmp126-.Lfunc_begin14 #     jumps to .Ltmp126
	.byte	1                       #   On action: 1
	.long	.Ltmp125-.Lfunc_begin14 # >> Call Site 5 <<
	.long	.Lfunc_end91-.Ltmp125   #   Call between .Ltmp125 and .Lfunc_end91
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE8allocateERS5_m,"axG",@progbits,_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE8allocateERS5_m,comdat
	.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE8allocateERS5_m # -- Begin function _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE8allocateERS5_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE8allocateERS5_m,@function
_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE8allocateERS5_m: # @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE8allocateERS5_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8allocateEmPKv
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end92:
	.size	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE8allocateERS5_m, .Lfunc_end92-_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE8allocateERS5_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rdx
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8max_sizeEv
	movq	-32(%rbp), %rdx         # 8-byte Reload
	cmpq	%rax, %rdx
	jbe	.LBB93_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv
.LBB93_2:
	imulq	$48, -16(%rbp), %rdi
	callq	_Znwm
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end93:
	.size	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8allocateEmPKv, .Lfunc_end93-_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movabsq	$384307168202282325, %rax # imm = 0x555555555555555
	movq	%rdi, -8(%rbp)
	popq	%rbp
	retq
.Lfunc_end94:
	.size	_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8max_sizeEv, .Lfunc_end94-_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_: # @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	%r8, -40(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	movq	%rsi, -56(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
	movq	-32(%rbp), %rdi
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-40(%rbp), %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movq	-64(%rbp), %rdx         # 8-byte Reload
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movq	%rax, %r8
	callq	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_
	addq	$80, %rsp
	popq	%rbp
	retq
.Lfunc_end95:
	.size	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_, .Lfunc_end95-_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKddEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	%r8, -40(%rbp)
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rdi
	movq	%rcx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
	movq	-32(%rbp), %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardISt5tupleIJRKdEEEOT_RNSt16remove_referenceIS4_E4typeE
	leaq	-56(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZNSt5tupleIJRKdEEC2EOS2_
	movq	-40(%rbp), %rdi
	callq	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
	leaq	-56(%rbp), %rsi
	movq	-72(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNSt4pairIKddEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE
	addq	$96, %rsp
	popq	%rbp
	retq
.Lfunc_end96:
	.size	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_, .Lfunc_end96-_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKddEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5tupleIJRKdEEC2EOS2_,"axG",@progbits,_ZNSt5tupleIJRKdEEC2EOS2_,comdat
	.weak	_ZNSt5tupleIJRKdEEC2EOS2_ # -- Begin function _ZNSt5tupleIJRKdEEC2EOS2_
	.p2align	4, 0x90
	.type	_ZNSt5tupleIJRKdEEC2EOS2_,@function
_ZNSt5tupleIJRKdEEC2EOS2_:              # @_ZNSt5tupleIJRKdEEC2EOS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt11_Tuple_implILm0EJRKdEEC2EOS2_
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end97:
	.size	_ZNSt5tupleIJRKdEEC2EOS2_, .Lfunc_end97-_ZNSt5tupleIJRKdEEC2EOS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairIKddEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE,"axG",@progbits,_ZNSt4pairIKddEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE,comdat
	.weak	_ZNSt4pairIKddEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE # -- Begin function _ZNSt4pairIKddEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE
	.p2align	4, 0x90
	.type	_ZNSt4pairIKddEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE,@function
_ZNSt4pairIKddEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE: # @_ZNSt4pairIKddEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	leaq	-16(%rbp), %rdx
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rdi
	callq	_ZNSt4pairIKddEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end98:
	.size	_ZNSt4pairIKddEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE, .Lfunc_end98-_ZNSt4pairIKddEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Tuple_implILm0EJRKdEEC2EOS2_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJRKdEEC2EOS2_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJRKdEEC2EOS2_ # -- Begin function _ZNSt11_Tuple_implILm0EJRKdEEC2EOS2_
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJRKdEEC2EOS2_,@function
_ZNSt11_Tuple_implILm0EJRKdEEC2EOS2_:   # @_ZNSt11_Tuple_implILm0EJRKdEEC2EOS2_
.Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception15
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	callq	_ZNSt11_Tuple_implILm0EJRKdEE7_M_headERS2_
	movq	%rax, %rdi
	callq	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
.Ltmp127:
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt10_Head_baseILm0ERKdLb0EEC2ES1_
.Ltmp128:
	jmp	.LBB99_1
.LBB99_1:
	addq	$32, %rsp
	popq	%rbp
	retq
.LBB99_2:
.Ltmp129:
	movl	%edx, %ecx
	movq	%rax, %rdi
	movl	%ecx, -28(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.Lfunc_end99:
	.size	_ZNSt11_Tuple_implILm0EJRKdEEC2EOS2_, .Lfunc_end99-_ZNSt11_Tuple_implILm0EJRKdEEC2EOS2_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table99:
.Lexception15:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	21                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	13                      # Call site table length
	.long	.Ltmp127-.Lfunc_begin15 # >> Call Site 1 <<
	.long	.Ltmp128-.Ltmp127       #   Call between .Ltmp127 and .Ltmp128
	.long	.Ltmp129-.Lfunc_begin15 #     jumps to .Ltmp129
	.byte	1                       #   On action: 1
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE,comdat
	.weak	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE # -- Begin function _ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE,@function
_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE: # @_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end100:
	.size	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE, .Lfunc_end100-_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Tuple_implILm0EJRKdEE7_M_headERS2_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJRKdEE7_M_headERS2_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJRKdEE7_M_headERS2_ # -- Begin function _ZNSt11_Tuple_implILm0EJRKdEE7_M_headERS2_
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJRKdEE7_M_headERS2_,@function
_ZNSt11_Tuple_implILm0EJRKdEE7_M_headERS2_: # @_ZNSt11_Tuple_implILm0EJRKdEE7_M_headERS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Head_baseILm0ERKdLb0EE7_M_headERS2_
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end101:
	.size	_ZNSt11_Tuple_implILm0EJRKdEE7_M_headERS2_, .Lfunc_end101-_ZNSt11_Tuple_implILm0EJRKdEE7_M_headERS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_Head_baseILm0ERKdLb0EEC2ES1_,"axG",@progbits,_ZNSt10_Head_baseILm0ERKdLb0EEC2ES1_,comdat
	.weak	_ZNSt10_Head_baseILm0ERKdLb0EEC2ES1_ # -- Begin function _ZNSt10_Head_baseILm0ERKdLb0EEC2ES1_
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0ERKdLb0EEC2ES1_,@function
_ZNSt10_Head_baseILm0ERKdLb0EEC2ES1_:   # @_ZNSt10_Head_baseILm0ERKdLb0EEC2ES1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, (%rsi)
	popq	%rbp
	retq
.Lfunc_end102:
	.size	_ZNSt10_Head_baseILm0ERKdLb0EEC2ES1_, .Lfunc_end102-_ZNSt10_Head_baseILm0ERKdLb0EEC2ES1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_Head_baseILm0ERKdLb0EE7_M_headERS2_,"axG",@progbits,_ZNSt10_Head_baseILm0ERKdLb0EE7_M_headERS2_,comdat
	.weak	_ZNSt10_Head_baseILm0ERKdLb0EE7_M_headERS2_ # -- Begin function _ZNSt10_Head_baseILm0ERKdLb0EE7_M_headERS2_
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0ERKdLb0EE7_M_headERS2_,@function
_ZNSt10_Head_baseILm0ERKdLb0EE7_M_headERS2_: # @_ZNSt10_Head_baseILm0ERKdLb0EE7_M_headERS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rax
	popq	%rbp
	retq
.Lfunc_end103:
	.size	_ZNSt10_Head_baseILm0ERKdLb0EE7_M_headERS2_, .Lfunc_end103-_ZNSt10_Head_baseILm0ERKdLb0EE7_M_headERS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairIKddEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE,"axG",@progbits,_ZNSt4pairIKddEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE,comdat
	.weak	_ZNSt4pairIKddEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE # -- Begin function _ZNSt4pairIKddEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE
	.p2align	4, 0x90
	.type	_ZNSt4pairIKddEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE,@function
_ZNSt4pairIKddEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE: # @_ZNSt4pairIKddEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	_ZSt3getILm0EJRKdEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_
	movq	%rax, %rdi
	callq	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
	xorps	%xmm0, %xmm0
	movsd	(%rax), %xmm1           # xmm1 = mem[0],zero
	movq	-48(%rbp), %rax         # 8-byte Reload
	movsd	%xmm1, (%rax)
	movsd	%xmm0, 8(%rax)
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end104:
	.size	_ZNSt4pairIKddEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE, .Lfunc_end104-_ZNSt4pairIKddEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3getILm0EJRKdEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_,"axG",@progbits,_ZSt3getILm0EJRKdEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_,comdat
	.weak	_ZSt3getILm0EJRKdEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_ # -- Begin function _ZSt3getILm0EJRKdEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_
	.p2align	4, 0x90
	.type	_ZSt3getILm0EJRKdEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_,@function
_ZSt3getILm0EJRKdEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_: # @_ZSt3getILm0EJRKdEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__get_helperILm0ERKdJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end105:
	.size	_ZSt3getILm0EJRKdEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_, .Lfunc_end105-_ZSt3getILm0EJRKdEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__get_helperILm0ERKdJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE,"axG",@progbits,_ZSt12__get_helperILm0ERKdJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE,comdat
	.weak	_ZSt12__get_helperILm0ERKdJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE # -- Begin function _ZSt12__get_helperILm0ERKdJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE
	.p2align	4, 0x90
	.type	_ZSt12__get_helperILm0ERKdJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE,@function
_ZSt12__get_helperILm0ERKdJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE: # @_ZSt12__get_helperILm0ERKdJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt11_Tuple_implILm0EJRKdEE7_M_headERS2_
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end106:
	.size	_ZSt12__get_helperILm0ERKdJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE, .Lfunc_end106-_ZSt12__get_helperILm0ERKdJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEE13_M_const_castEv,"axG",@progbits,_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEE13_M_const_castEv,comdat
	.weak	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEE13_M_const_castEv # -- Begin function _ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEE13_M_const_castEv
	.p2align	4, 0x90
	.type	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEE13_M_const_castEv,@function
_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEE13_M_const_castEv: # @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEE13_M_const_castEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	leaq	-8(%rbp), %rax
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rsi
	movq	%rax, %rdi
	callq	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end107:
	.size	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEE13_M_const_castEv, .Lfunc_end107-_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEE13_M_const_castEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE4sizeEv,"axG",@progbits,_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE4sizeEv,comdat
	.weak	_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE4sizeEv # -- Begin function _ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE4sizeEv,@function
_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE4sizeEv: # @_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	40(%rdi), %rax
	popq	%rbp
	retq
.Lfunc_end108:
	.size	_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE4sizeEv, .Lfunc_end108-_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZNKSt10_Select1stISt4pairIKddEEclERKS2_
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end109:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base, .Lfunc_end109-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_rightmostEv,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_rightmostEv,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_rightmostEv # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_rightmostEv
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_rightmostEv,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_rightmostEv: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_rightmostEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$8, %rdi
	addq	$24, %rdi
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end110:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_rightmostEv, .Lfunc_end110-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_rightmostEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_,"axG",@progbits,_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_,comdat
	.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_ # -- Begin function _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_
	.p2align	4, 0x90
	.type	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_,@function
_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_: # @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	-16(%rbp), %rsi
	movq	(%rsi), %rsi
	movq	%rsi, (%rdx)
	movq	-24(%rbp), %rdi
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
	movq	(%rax), %rax
	movq	-32(%rbp), %rdx         # 8-byte Reload
	movq	%rax, 8(%rdx)
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end111:
	.size	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_, .Lfunc_end111-_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE24_M_get_insert_unique_posERS1_,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE24_M_get_insert_unique_posERS1_,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE24_M_get_insert_unique_posERS1_ # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE24_M_get_insert_unique_posERS1_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE24_M_get_insert_unique_posERS1_,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE24_M_get_insert_unique_posERS1_: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE24_M_get_insert_unique_posERS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$128, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rsi
	movq	%rsi, %rdi
	movq	%rsi, -88(%rbp)         # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv
	movq	%rax, -40(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv
	movq	%rax, -48(%rbp)
	movb	$1, -49(%rbp)
.LBB112_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, -40(%rbp)
	je	.LBB112_6
# %bb.2:                                #   in Loop: Header=BB112_1 Depth=1
	movq	-40(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-88(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rsi
	movq	-40(%rbp), %rdi
	movq	%rax, -96(%rbp)         # 8-byte Spill
	movq	%rsi, -104(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	-104(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNKSt4lessIdEclERKdS2_
	andb	$1, %al
	movb	%al, -49(%rbp)
	testb	$1, -49(%rbp)
	je	.LBB112_4
# %bb.3:                                #   in Loop: Header=BB112_1 Depth=1
	movq	-40(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base
	movq	%rax, -112(%rbp)        # 8-byte Spill
	jmp	.LBB112_5
.LBB112_4:                              #   in Loop: Header=BB112_1 Depth=1
	movq	-40(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base
	movq	%rax, -112(%rbp)        # 8-byte Spill
.LBB112_5:                              #   in Loop: Header=BB112_1 Depth=1
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rax, -40(%rbp)
	jmp	.LBB112_1
.LBB112_6:
	leaq	-64(%rbp), %rdi
	movq	-48(%rbp), %rsi
	callq	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base
	testb	$1, -49(%rbp)
	je	.LBB112_11
# %bb.7:
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5beginEv
	leaq	-64(%rbp), %rdi
	leaq	-72(%rbp), %rsi
	movq	%rax, -72(%rbp)
	callq	_ZNKSt17_Rb_tree_iteratorISt4pairIKddEEeqERKS3_
	testb	$1, %al
	jne	.LBB112_8
	jmp	.LBB112_9
.LBB112_8:
	leaq	-16(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	leaq	-48(%rbp), %rdx
	callq	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKddEERS1_Lb1EEEOT_OT0_
	jmp	.LBB112_14
.LBB112_9:
	leaq	-64(%rbp), %rdi
	callq	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEmmEv
	movq	%rax, -120(%rbp)        # 8-byte Spill
# %bb.10:
	jmp	.LBB112_11
.LBB112_11:
	movq	-88(%rbp), %rax         # 8-byte Reload
	movq	-64(%rbp), %rdi
	movq	%rax, -128(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base
	movq	-32(%rbp), %rdx
	movq	-128(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNKSt4lessIdEclERKdS2_
	testb	$1, %al
	jne	.LBB112_12
	jmp	.LBB112_13
.LBB112_12:
	leaq	-16(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	leaq	-48(%rbp), %rdx
	callq	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKddEERS1_Lb1EEEOT_OT0_
	jmp	.LBB112_14
.LBB112_13:
	leaq	-16(%rbp), %rdi
	leaq	-80(%rbp), %rdx
	leaq	-64(%rbp), %rsi
	movq	$0, -80(%rbp)
	callq	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_
.LBB112_14:
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rdx
	addq	$128, %rsp
	popq	%rbp
	retq
.Lfunc_end112:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE24_M_get_insert_unique_posERS1_, .Lfunc_end112-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE24_M_get_insert_unique_posERS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_leftmostEv,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_leftmostEv,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_leftmostEv # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_leftmostEv
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_leftmostEv,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_leftmostEv: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_leftmostEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$8, %rdi
	addq	$16, %rdi
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end113:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_leftmostEv, .Lfunc_end113-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11_M_leftmostEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_,"axG",@progbits,_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_,comdat
	.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_ # -- Begin function _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_
	.p2align	4, 0x90
	.type	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_,@function
_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_: # @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	-16(%rbp), %rdi
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
	movq	(%rax), %rax
	movq	-32(%rbp), %rdx         # 8-byte Reload
	movq	%rax, (%rdx)
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
	movq	(%rax), %rax
	movq	-32(%rbp), %rdx         # 8-byte Reload
	movq	%rax, 8(%rdx)
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end114:
	.size	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_, .Lfunc_end114-_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Rb_tree_iteratorISt4pairIKddEEmmEv,"axG",@progbits,_ZNSt17_Rb_tree_iteratorISt4pairIKddEEmmEv,comdat
	.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEmmEv # -- Begin function _ZNSt17_Rb_tree_iteratorISt4pairIKddEEmmEv
	.p2align	4, 0x90
	.type	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEmmEv,@function
_ZNSt17_Rb_tree_iteratorISt4pairIKddEEmmEv: # @_ZNSt17_Rb_tree_iteratorISt4pairIKddEEmmEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
	movq	-16(%rbp), %rdi         # 8-byte Reload
	movq	%rax, (%rdi)
	movq	%rdi, %rax
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end115:
	.size	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEmmEv, .Lfunc_end115-_ZNSt17_Rb_tree_iteratorISt4pairIKddEEmmEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Rb_tree_iteratorISt4pairIKddEEppEv,"axG",@progbits,_ZNSt17_Rb_tree_iteratorISt4pairIKddEEppEv,comdat
	.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEppEv # -- Begin function _ZNSt17_Rb_tree_iteratorISt4pairIKddEEppEv
	.p2align	4, 0x90
	.type	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEppEv,@function
_ZNSt17_Rb_tree_iteratorISt4pairIKddEEppEv: # @_ZNSt17_Rb_tree_iteratorISt4pairIKddEEppEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
	movq	-16(%rbp), %rdi         # 8-byte Reload
	movq	%rax, (%rdi)
	movq	%rdi, %rax
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end116:
	.size	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEppEv, .Lfunc_end116-_ZNSt17_Rb_tree_iteratorISt4pairIKddEEppEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_,"axG",@progbits,_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_,comdat
	.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_ # -- Begin function _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_
	.p2align	4, 0x90
	.type	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_,@function
_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_: # @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	-16(%rbp), %rdi
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
	movq	(%rax), %rax
	movq	-32(%rbp), %rdx         # 8-byte Reload
	movq	%rax, (%rdx)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, 8(%rdx)
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end117:
	.size	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_, .Lfunc_end117-_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt13_Rb_tree_nodeISt4pairIKddEE9_M_valptrEv
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end118:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base, .Lfunc_end118-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE,"axG",@progbits,_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE,comdat
	.weak	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE # -- Begin function _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE,@function
_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE: # @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end119:
	.size	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE, .Lfunc_end119-_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5beginEv,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5beginEv,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5beginEv # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5beginEv,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5beginEv: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	leaq	-8(%rbp), %rax
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	movq	24(%rdi), %rsi
	movq	%rax, %rdi
	callq	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end120:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5beginEv, .Lfunc_end120-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKddEERS1_Lb1EEEOT_OT0_,"axG",@progbits,_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKddEERS1_Lb1EEEOT_OT0_,comdat
	.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKddEERS1_Lb1EEEOT_OT0_ # -- Begin function _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKddEERS1_Lb1EEEOT_OT0_
	.p2align	4, 0x90
	.type	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKddEERS1_Lb1EEEOT_OT0_,@function
_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKddEERS1_Lb1EEEOT_OT0_: # @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKddEERS1_Lb1EEEOT_OT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	-16(%rbp), %rdi
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKddEEEOT_RNSt16remove_referenceIS7_E4typeE
	movq	(%rax), %rax
	movq	-32(%rbp), %rdx         # 8-byte Reload
	movq	%rax, (%rdx)
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
	movq	(%rax), %rax
	movq	-32(%rbp), %rdx         # 8-byte Reload
	movq	%rax, 8(%rdx)
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end121:
	.size	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKddEERS1_Lb1EEEOT_OT0_, .Lfunc_end121-_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKddEERS1_Lb1EEEOT_OT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKddEEEOT_RNSt16remove_referenceIS7_E4typeE,"axG",@progbits,_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKddEEEOT_RNSt16remove_referenceIS7_E4typeE,comdat
	.weak	_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKddEEEOT_RNSt16remove_referenceIS7_E4typeE # -- Begin function _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKddEEEOT_RNSt16remove_referenceIS7_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKddEEEOT_RNSt16remove_referenceIS7_E4typeE,@function
_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKddEEEOT_RNSt16remove_referenceIS7_E4typeE: # @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKddEEEOT_RNSt16remove_referenceIS7_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end122:
	.size	_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKddEEEOT_RNSt16remove_referenceIS7_E4typeE, .Lfunc_end122-_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKddEEEOT_RNSt16remove_referenceIS7_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Tuple_implILm0EJRKdEEC2ES1_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJRKdEEC2ES1_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJRKdEEC2ES1_ # -- Begin function _ZNSt11_Tuple_implILm0EJRKdEEC2ES1_
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJRKdEEC2ES1_,@function
_ZNSt11_Tuple_implILm0EJRKdEEC2ES1_:    # @_ZNSt11_Tuple_implILm0EJRKdEEC2ES1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt10_Head_baseILm0ERKdLb0EEC2ES1_
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end123:
	.size	_ZNSt11_Tuple_implILm0EJRKdEEC2ES1_, .Lfunc_end123-_ZNSt11_Tuple_implILm0EJRKdEEC2ES1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5eraseERS1_,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5eraseERS1_,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5eraseERS1_ # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5eraseERS1_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5eraseERS1_,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5eraseERS1_: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5eraseERS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -64(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rsi, -72(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11equal_rangeERS1_
	movq	%rax, -32(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE4sizeEv
	leaq	-48(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	movq	%rax, -40(%rbp)
	callq	_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E
	leaq	-56(%rbp), %rdi
	leaq	-32(%rbp), %rax
	addq	$8, %rax
	movq	%rax, %rsi
	callq	_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E
	movq	-48(%rbp), %rsi
	movq	-56(%rbp), %rdx
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_
	movq	-40(%rbp), %rax
	movq	-72(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE4sizeEv
	movq	-80(%rbp), %rdx         # 8-byte Reload
	subq	%rax, %rdx
	movq	%rdx, %rax
	addq	$80, %rsp
	popq	%rbp
	retq
.Lfunc_end124:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5eraseERS1_, .Lfunc_end124-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5eraseERS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11equal_rangeERS1_,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11equal_rangeERS1_,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11equal_rangeERS1_ # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11equal_rangeERS1_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11equal_rangeERS1_,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11equal_rangeERS1_: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11equal_rangeERS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$128, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rsi
	movq	%rsi, %rdi
	movq	%rsi, -104(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv
	movq	%rax, -40(%rbp)
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_M_endEv
	movq	%rax, -48(%rbp)
.LBB125_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, -40(%rbp)
	je	.LBB125_9
# %bb.2:                                #   in Loop: Header=BB125_1 Depth=1
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	-40(%rbp), %rdi
	movq	%rax, -112(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E
	movq	-32(%rbp), %rdx
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNKSt4lessIdEclERKdS2_
	testb	$1, %al
	jne	.LBB125_3
	jmp	.LBB125_4
.LBB125_3:                              #   in Loop: Header=BB125_1 Depth=1
	movq	-40(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base
	movq	%rax, -40(%rbp)
	jmp	.LBB125_8
.LBB125_4:                              #   in Loop: Header=BB125_1 Depth=1
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	-32(%rbp), %rsi
	movq	-40(%rbp), %rdi
	movq	%rax, -120(%rbp)        # 8-byte Spill
	movq	%rsi, -128(%rbp)        # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNKSt4lessIdEclERKdS2_
	testb	$1, %al
	jne	.LBB125_5
	jmp	.LBB125_6
.LBB125_5:                              #   in Loop: Header=BB125_1 Depth=1
	movq	-40(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base
	movq	%rax, -40(%rbp)
	jmp	.LBB125_7
.LBB125_6:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base
	movq	%rax, -40(%rbp)
	movq	-56(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base
	movq	%rax, -56(%rbp)
	movq	-40(%rbp), %rsi
	movq	-48(%rbp), %rdx
	movq	-32(%rbp), %rcx
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_
	movq	%rax, -72(%rbp)
	movq	-56(%rbp), %rsi
	movq	-64(%rbp), %rdx
	movq	-32(%rbp), %rcx
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_
	leaq	-16(%rbp), %rdi
	leaq	-72(%rbp), %rsi
	leaq	-80(%rbp), %rdx
	movq	%rax, -80(%rbp)
	callq	_ZNSt4pairISt17_Rb_tree_iteratorIS_IKddEES3_EC2IS3_S3_Lb1EEEOT_OT0_
	jmp	.LBB125_10
.LBB125_7:                              #   in Loop: Header=BB125_1 Depth=1
	jmp	.LBB125_8
.LBB125_8:                              #   in Loop: Header=BB125_1 Depth=1
	jmp	.LBB125_1
.LBB125_9:
	leaq	-88(%rbp), %rdi
	movq	-48(%rbp), %rsi
	callq	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base
	leaq	-96(%rbp), %rdi
	movq	-48(%rbp), %rsi
	callq	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base
	leaq	-16(%rbp), %rdi
	leaq	-88(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNSt4pairISt17_Rb_tree_iteratorIS_IKddEES3_EC2IS3_S3_Lb1EEEOT_OT0_
.LBB125_10:
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rdx
	addq	$128, %rsp
	popq	%rbp
	retq
.Lfunc_end125:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11equal_rangeERS1_, .Lfunc_end125-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE11equal_rangeERS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_ # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rsi, -8(%rbp)
	movq	%rdx, -16(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5beginEv
	leaq	-32(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	movq	%rax, -40(%rbp)
	callq	_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E
	leaq	-8(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	callq	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEeqERKS3_
	xorl	%ecx, %ecx
	movb	%cl, %r8b
	testb	$1, %al
	movb	%r8b, -73(%rbp)         # 1-byte Spill
	jne	.LBB126_1
	jmp	.LBB126_2
.LBB126_1:
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE3endEv
	leaq	-48(%rbp), %rdi
	leaq	-56(%rbp), %rsi
	movq	%rax, -56(%rbp)
	callq	_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEC2ERKSt17_Rb_tree_iteratorIS2_E
	leaq	-16(%rbp), %rdi
	leaq	-48(%rbp), %rsi
	callq	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEeqERKS3_
	movb	%al, -73(%rbp)          # 1-byte Spill
.LBB126_2:
	movb	-73(%rbp), %al          # 1-byte Reload
	testb	$1, %al
	jne	.LBB126_3
	jmp	.LBB126_4
.LBB126_3:
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5clearEv
	jmp	.LBB126_8
.LBB126_4:
	jmp	.LBB126_5
.LBB126_5:                              # =>This Inner Loop Header: Depth=1
	leaq	-8(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEneERKS3_
	testb	$1, %al
	jne	.LBB126_6
	jmp	.LBB126_7
.LBB126_6:                              #   in Loop: Header=BB126_5 Depth=1
	leaq	-8(%rbp), %rdi
	xorl	%esi, %esi
	callq	_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEppEi
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rsi
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E
	jmp	.LBB126_5
.LBB126_7:
	jmp	.LBB126_8
.LBB126_8:
	addq	$80, %rsp
	popq	%rbp
	retq
.Lfunc_end126:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_, .Lfunc_end126-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_ # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rcx
	movq	%rcx, -48(%rbp)         # 8-byte Spill
.LBB127_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, -24(%rbp)
	je	.LBB127_6
# %bb.2:                                #   in Loop: Header=BB127_1 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-40(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNKSt4lessIdEclERKdS2_
	testb	$1, %al
	jne	.LBB127_3
	jmp	.LBB127_4
.LBB127_3:                              #   in Loop: Header=BB127_1 Depth=1
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base
	movq	%rax, -24(%rbp)
	jmp	.LBB127_5
.LBB127_4:                              #   in Loop: Header=BB127_1 Depth=1
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base
	movq	%rax, -24(%rbp)
.LBB127_5:                              #   in Loop: Header=BB127_1 Depth=1
	jmp	.LBB127_1
.LBB127_6:
	leaq	-8(%rbp), %rdi
	movq	-32(%rbp), %rsi
	callq	_ZNSt17_Rb_tree_iteratorISt4pairIKddEEC2EPSt18_Rb_tree_node_base
	movq	-8(%rbp), %rax
	addq	$64, %rsp
	popq	%rbp
	retq
.Lfunc_end127:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_, .Lfunc_end127-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS2_EPSt18_Rb_tree_node_baseRS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairISt17_Rb_tree_iteratorIS_IKddEES3_EC2IS3_S3_Lb1EEEOT_OT0_,"axG",@progbits,_ZNSt4pairISt17_Rb_tree_iteratorIS_IKddEES3_EC2IS3_S3_Lb1EEEOT_OT0_,comdat
	.weak	_ZNSt4pairISt17_Rb_tree_iteratorIS_IKddEES3_EC2IS3_S3_Lb1EEEOT_OT0_ # -- Begin function _ZNSt4pairISt17_Rb_tree_iteratorIS_IKddEES3_EC2IS3_S3_Lb1EEEOT_OT0_
	.p2align	4, 0x90
	.type	_ZNSt4pairISt17_Rb_tree_iteratorIS_IKddEES3_EC2IS3_S3_Lb1EEEOT_OT0_,@function
_ZNSt4pairISt17_Rb_tree_iteratorIS_IKddEES3_EC2IS3_S3_Lb1EEEOT_OT0_: # @_ZNSt4pairISt17_Rb_tree_iteratorIS_IKddEES3_EC2IS3_S3_Lb1EEEOT_OT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	-16(%rbp), %rdi
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKddEEEOT_RNSt16remove_referenceIS5_E4typeE
	movq	(%rax), %rax
	movq	-32(%rbp), %rdx         # 8-byte Reload
	movq	%rax, (%rdx)
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKddEEEOT_RNSt16remove_referenceIS5_E4typeE
	movq	(%rax), %rax
	movq	-32(%rbp), %rdx         # 8-byte Reload
	movq	%rax, 8(%rdx)
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end128:
	.size	_ZNSt4pairISt17_Rb_tree_iteratorIS_IKddEES3_EC2IS3_S3_Lb1EEEOT_OT0_, .Lfunc_end128-_ZNSt4pairISt17_Rb_tree_iteratorIS_IKddEES3_EC2IS3_S3_Lb1EEEOT_OT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKddEEEOT_RNSt16remove_referenceIS5_E4typeE,"axG",@progbits,_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKddEEEOT_RNSt16remove_referenceIS5_E4typeE,comdat
	.weak	_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKddEEEOT_RNSt16remove_referenceIS5_E4typeE # -- Begin function _ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKddEEEOT_RNSt16remove_referenceIS5_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKddEEEOT_RNSt16remove_referenceIS5_E4typeE,@function
_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKddEEEOT_RNSt16remove_referenceIS5_E4typeE: # @_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKddEEEOT_RNSt16remove_referenceIS5_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end129:
	.size	_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKddEEEOT_RNSt16remove_referenceIS5_E4typeE, .Lfunc_end129-_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKddEEEOT_RNSt16remove_referenceIS5_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEeqERKS3_,"axG",@progbits,_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEeqERKS3_,comdat
	.weak	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEeqERKS3_ # -- Begin function _ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEeqERKS3_
	.p2align	4, 0x90
	.type	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEeqERKS3_,@function
_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEeqERKS3_: # @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEeqERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rbp), %rdi
	cmpq	(%rdi), %rsi
	sete	%al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	retq
.Lfunc_end130:
	.size	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEeqERKS3_, .Lfunc_end130-_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEeqERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5clearEv,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5clearEv,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5clearEv # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5clearEv
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5clearEv,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5clearEv: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5clearEv
.Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception16
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_beginEv
.Ltmp130:
	movq	-16(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
.Ltmp131:
	jmp	.LBB131_1
.LBB131_1:
	movq	-16(%rbp), %rax         # 8-byte Reload
	addq	$8, %rax
.Ltmp132:
	movq	%rax, %rdi
	callq	_ZNSt15_Rb_tree_header8_M_resetEv
.Ltmp133:
	jmp	.LBB131_2
.LBB131_2:
	addq	$32, %rsp
	popq	%rbp
	retq
.LBB131_3:
.Ltmp134:
	movl	%edx, %ecx
	movq	%rax, %rdi
	movl	%ecx, -20(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.Lfunc_end131:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5clearEv, .Lfunc_end131-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE5clearEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table131:
.Lexception16:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	21                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	13                      # Call site table length
	.long	.Ltmp130-.Lfunc_begin16 # >> Call Site 1 <<
	.long	.Ltmp133-.Ltmp130       #   Call between .Ltmp130 and .Ltmp133
	.long	.Ltmp134-.Lfunc_begin16 #     jumps to .Ltmp134
	.byte	1                       #   On action: 1
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEneERKS3_,"axG",@progbits,_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEneERKS3_,comdat
	.weak	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEneERKS3_ # -- Begin function _ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEneERKS3_
	.p2align	4, 0x90
	.type	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEneERKS3_,@function
_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEneERKS3_: # @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEneERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rbp), %rdi
	cmpq	(%rdi), %rsi
	setne	%al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	retq
.Lfunc_end132:
	.size	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEneERKS3_, .Lfunc_end132-_ZNKSt23_Rb_tree_const_iteratorISt4pairIKddEEneERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E # -- Begin function _ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E,@function
_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E: # @_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rsi, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rsi
	movq	-8(%rbp), %rdi
	movq	%rsi, %rax
	addq	$8, %rax
	movq	%rsi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	40(%rax), %rsi
	addq	$-1, %rsi
	movq	%rsi, 40(%rax)
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end133:
	.size	_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E, .Lfunc_end133-_ZNSt8_Rb_treeIdSt4pairIKddESt10_Select1stIS2_ESt4lessIdESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEppEi,"axG",@progbits,_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEppEi,comdat
	.weak	_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEppEi # -- Begin function _ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEppEi
	.p2align	4, 0x90
	.type	_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEppEi,@function
_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEppEi: # @_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEppEi
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movl	%esi, -20(%rbp)
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rax
	movq	%rax, -8(%rbp)
	movq	(%rdi), %rax
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, (%rdi)
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end134:
	.size	_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEppEi, .Lfunc_end134-_ZNSt23_Rb_tree_const_iteratorISt4pairIKddEEppEi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1ELl1EElLb1ELb1EE6__castIlS3_EES4_RKNS1_IT_T0_EE,"axG",@progbits,_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1ELl1EElLb1ELb1EE6__castIlS3_EES4_RKNS1_IT_T0_EE,comdat
	.weak	_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1ELl1EElLb1ELb1EE6__castIlS3_EES4_RKNS1_IT_T0_EE # -- Begin function _ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1ELl1EElLb1ELb1EE6__castIlS3_EES4_RKNS1_IT_T0_EE
	.p2align	4, 0x90
	.type	_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1ELl1EElLb1ELb1EE6__castIlS3_EES4_RKNS1_IT_T0_EE,@function
_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1ELl1EElLb1ELb1EE6__castIlS3_EES4_RKNS1_IT_T0_EE: # @_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1ELl1EElLb1ELb1EE6__castIlS3_EES4_RKNS1_IT_T0_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv
	leaq	-8(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	movq	%rax, -24(%rbp)
	callq	_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end135:
	.size	_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1ELl1EElLb1ELb1EE6__castIlS3_EES4_RKNS1_IT_T0_EE, .Lfunc_end135-_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1ELl1EElLb1ELb1EE6__castIlS3_EES4_RKNS1_IT_T0_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_,"axG",@progbits,_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_,comdat
	.weak	_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_ # -- Begin function _ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_
	.p2align	4, 0x90
	.type	_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_,@function
_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_: # @_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	leaq	-40(%rbp), %rax
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	(%rsi), %rsi
	movq	%rsi, -40(%rbp)
	movq	%rax, %rdi
	callq	_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv
	leaq	-48(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	(%rsi), %rsi
	movq	%rsi, -48(%rbp)
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv
	leaq	-8(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	movq	-56(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	movq	%rcx, -32(%rbp)
	callq	_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_
	movq	-8(%rbp), %rax
	addq	$64, %rsp
	popq	%rbp
	retq
.Lfunc_end136:
	.size	_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_, .Lfunc_end136-_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv,"axG",@progbits,_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv,comdat
	.weak	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv # -- Begin function _ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv
	.p2align	4, 0x90
	.type	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv,@function
_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv: # @_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rdi
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end137:
	.size	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv, .Lfunc_end137-_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEEC2Ev # -- Begin function _ZNSt12_Vector_baseIdSaIdEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEEC2Ev,@function
_ZNSt12_Vector_baseIdSaIdEEC2Ev:        # @_ZNSt12_Vector_baseIdSaIdEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end138:
	.size	_ZNSt12_Vector_baseIdSaIdEEC2Ev, .Lfunc_end138-_ZNSt12_Vector_baseIdSaIdEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSaIdEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end139:
	.size	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev, .Lfunc_end139-_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIdEC2Ev,"axG",@progbits,_ZNSaIdEC2Ev,comdat
	.weak	_ZNSaIdEC2Ev            # -- Begin function _ZNSaIdEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIdEC2Ev,@function
_ZNSaIdEC2Ev:                           # @_ZNSaIdEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIdEC2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end140:
	.size	_ZNSaIdEC2Ev, .Lfunc_end140-_ZNSaIdEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIdEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIdEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIdEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIdEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIdEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIdEC2Ev:    # @_ZN9__gnu_cxx13new_allocatorIdEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	retq
.Lfunc_end141:
	.size	_ZN9__gnu_cxx13new_allocatorIdEC2Ev, .Lfunc_end141-_ZN9__gnu_cxx13new_allocatorIdEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPddEvT_S1_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPddEvT_S1_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E # -- Begin function _ZSt8_DestroyIPddEvT_S1_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E,@function
_ZSt8_DestroyIPddEvT_S1_RSaIT0_E:       # @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPdEvT_S1_
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end142:
	.size	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E, .Lfunc_end142-_ZSt8_DestroyIPddEvT_S1_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end143:
	.size	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv, .Lfunc_end143-_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEED2Ev # -- Begin function _ZNSt12_Vector_baseIdSaIdEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEED2Ev,@function
_ZNSt12_Vector_baseIdSaIdEED2Ev:        # @_ZNSt12_Vector_baseIdSaIdEED2Ev
.Lfunc_begin17:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception17
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rax
	movq	16(%rdi), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
.Ltmp135:
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	%rcx, %rdx
	callq	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
.Ltmp136:
	jmp	.LBB144_1
.LBB144_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	retq
.LBB144_2:
.Ltmp137:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end144:
	.size	_ZNSt12_Vector_baseIdSaIdEED2Ev, .Lfunc_end144-_ZNSt12_Vector_baseIdSaIdEED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table144:
.Lexception17:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	21                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	13                      # Call site table length
	.long	.Ltmp135-.Lfunc_begin17 # >> Call Site 1 <<
	.long	.Ltmp136-.Ltmp135       #   Call between .Ltmp135 and .Ltmp136
	.long	.Ltmp137-.Lfunc_begin17 #     jumps to .Ltmp137
	.byte	1                       #   On action: 1
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPdEvT_S1_,"axG",@progbits,_ZSt8_DestroyIPdEvT_S1_,comdat
	.weak	_ZSt8_DestroyIPdEvT_S1_ # -- Begin function _ZSt8_DestroyIPdEvT_S1_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPdEvT_S1_,@function
_ZSt8_DestroyIPdEvT_S1_:                # @_ZSt8_DestroyIPdEvT_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end145:
	.size	_ZSt8_DestroyIPdEvT_S1_, .Lfunc_end145-_ZSt8_DestroyIPdEvT_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	retq
.Lfunc_end146:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_, .Lfunc_end146-_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm # -- Begin function _ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm,@function
_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm: # @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, -16(%rbp)
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	je	.LBB147_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm
.LBB147_2:
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end147:
	.size	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm, .Lfunc_end147-_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIdED2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end148:
	.size	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev, .Lfunc_end148-_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm,"axG",@progbits,_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm,comdat
	.weak	_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm # -- Begin function _ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm,@function
_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm: # @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rdx, %rdi
	movq	-32(%rbp), %rdx         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end149:
	.size	_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm, .Lfunc_end149-_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm # -- Begin function _ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm,@function
_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm: # @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end150:
	.size	_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm, .Lfunc_end150-_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIdED2Ev,"axG",@progbits,_ZNSaIdED2Ev,comdat
	.weak	_ZNSaIdED2Ev            # -- Begin function _ZNSaIdED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIdED2Ev,@function
_ZNSaIdED2Ev:                           # @_ZNSaIdED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIdED2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end151:
	.size	_ZNSaIdED2Ev, .Lfunc_end151-_ZNSaIdED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIdED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIdED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIdED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIdED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIdED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIdED2Ev:    # @_ZN9__gnu_cxx13new_allocatorIdED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	retq
.Lfunc_end152:
	.size	_ZN9__gnu_cxx13new_allocatorIdED2Ev, .Lfunc_end152-_ZN9__gnu_cxx13new_allocatorIdED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_,@function
_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_: # @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rdi
	movq	%rdi, (%rsi)
	popq	%rbp
	retq
.Lfunc_end153:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_, .Lfunc_end153-_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end154:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv, .Lfunc_end154-_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseI3BOASaIS0_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseI3BOASaIS0_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseI3BOASaIS0_EEC2Ev # -- Begin function _ZNSt12_Vector_baseI3BOASaIS0_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseI3BOASaIS0_EEC2Ev,@function
_ZNSt12_Vector_baseI3BOASaIS0_EEC2Ev:   # @_ZNSt12_Vector_baseI3BOASaIS0_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end155:
	.size	_ZNSt12_Vector_baseI3BOASaIS0_EEC2Ev, .Lfunc_end155-_ZNSt12_Vector_baseI3BOASaIS0_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSaI3BOAEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end156:
	.size	_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implC2Ev, .Lfunc_end156-_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaI3BOAEC2Ev,"axG",@progbits,_ZNSaI3BOAEC2Ev,comdat
	.weak	_ZNSaI3BOAEC2Ev         # -- Begin function _ZNSaI3BOAEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaI3BOAEC2Ev,@function
_ZNSaI3BOAEC2Ev:                        # @_ZNSaI3BOAEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorI3BOAEC2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end157:
	.size	_ZNSaI3BOAEC2Ev, .Lfunc_end157-_ZNSaI3BOAEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorI3BOAEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorI3BOAEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorI3BOAEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorI3BOAEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorI3BOAEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorI3BOAEC2Ev: # @_ZN9__gnu_cxx13new_allocatorI3BOAEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	retq
.Lfunc_end158:
	.size	_ZN9__gnu_cxx13new_allocatorI3BOAEC2Ev, .Lfunc_end158-_ZN9__gnu_cxx13new_allocatorI3BOAEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIP3BOAS0_EvT_S2_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIP3BOAS0_EvT_S2_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIP3BOAS0_EvT_S2_RSaIT0_E # -- Begin function _ZSt8_DestroyIP3BOAS0_EvT_S2_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIP3BOAS0_EvT_S2_RSaIT0_E,@function
_ZSt8_DestroyIP3BOAS0_EvT_S2_RSaIT0_E:  # @_ZSt8_DestroyIP3BOAS0_EvT_S2_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIP3BOAEvT_S2_
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end159:
	.size	_ZSt8_DestroyIP3BOAS0_EvT_S2_RSaIT0_E, .Lfunc_end159-_ZSt8_DestroyIP3BOAS0_EvT_S2_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseI3BOASaIS0_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseI3BOASaIS0_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseI3BOASaIS0_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseI3BOASaIS0_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseI3BOASaIS0_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseI3BOASaIS0_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseI3BOASaIS0_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end160:
	.size	_ZNSt12_Vector_baseI3BOASaIS0_EE19_M_get_Tp_allocatorEv, .Lfunc_end160-_ZNSt12_Vector_baseI3BOASaIS0_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseI3BOASaIS0_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseI3BOASaIS0_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseI3BOASaIS0_EED2Ev # -- Begin function _ZNSt12_Vector_baseI3BOASaIS0_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseI3BOASaIS0_EED2Ev,@function
_ZNSt12_Vector_baseI3BOASaIS0_EED2Ev:   # @_ZNSt12_Vector_baseI3BOASaIS0_EED2Ev
.Lfunc_begin18:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception18
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rax
	movq	16(%rdi), %rcx
	subq	%rax, %rcx
	sarq	$4, %rcx
	movabsq	$-3689348814741910323, %rdx # imm = 0xCCCCCCCCCCCCCCCD
	imulq	%rdx, %rcx
.Ltmp138:
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	%rcx, %rdx
	callq	_ZNSt12_Vector_baseI3BOASaIS0_EE13_M_deallocateEPS0_m
.Ltmp139:
	jmp	.LBB161_1
.LBB161_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	retq
.LBB161_2:
.Ltmp140:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end161:
	.size	_ZNSt12_Vector_baseI3BOASaIS0_EED2Ev, .Lfunc_end161-_ZNSt12_Vector_baseI3BOASaIS0_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table161:
.Lexception18:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	21                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	13                      # Call site table length
	.long	.Ltmp138-.Lfunc_begin18 # >> Call Site 1 <<
	.long	.Ltmp139-.Ltmp138       #   Call between .Ltmp138 and .Ltmp139
	.long	.Ltmp140-.Lfunc_begin18 #     jumps to .Ltmp140
	.byte	1                       #   On action: 1
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIP3BOAEvT_S2_,"axG",@progbits,_ZSt8_DestroyIP3BOAEvT_S2_,comdat
	.weak	_ZSt8_DestroyIP3BOAEvT_S2_ # -- Begin function _ZSt8_DestroyIP3BOAEvT_S2_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIP3BOAEvT_S2_,@function
_ZSt8_DestroyIP3BOAEvT_S2_:             # @_ZSt8_DestroyIP3BOAEvT_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb0EE9__destroyIP3BOAEEvT_S4_
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end162:
	.size	_ZSt8_DestroyIP3BOAEvT_S2_, .Lfunc_end162-_ZSt8_DestroyIP3BOAEvT_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIP3BOAEEvT_S4_,"axG",@progbits,_ZNSt12_Destroy_auxILb0EE9__destroyIP3BOAEEvT_S4_,comdat
	.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIP3BOAEEvT_S4_ # -- Begin function _ZNSt12_Destroy_auxILb0EE9__destroyIP3BOAEEvT_S4_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb0EE9__destroyIP3BOAEEvT_S4_,@function
_ZNSt12_Destroy_auxILb0EE9__destroyIP3BOAEEvT_S4_: # @_ZNSt12_Destroy_auxILb0EE9__destroyIP3BOAEEvT_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
.LBB163_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB163_4
# %bb.2:                                #   in Loop: Header=BB163_1 Depth=1
	movq	-8(%rbp), %rdi
	callq	_ZSt11__addressofI3BOAEPT_RS1_
	movq	%rax, %rdi
	callq	_ZSt8_DestroyI3BOAEvPT_
# %bb.3:                                #   in Loop: Header=BB163_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$80, %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB163_1
.LBB163_4:
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end163:
	.size	_ZNSt12_Destroy_auxILb0EE9__destroyIP3BOAEEvT_S4_, .Lfunc_end163-_ZNSt12_Destroy_auxILb0EE9__destroyIP3BOAEEvT_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyI3BOAEvPT_,"axG",@progbits,_ZSt8_DestroyI3BOAEvPT_,comdat
	.weak	_ZSt8_DestroyI3BOAEvPT_ # -- Begin function _ZSt8_DestroyI3BOAEvPT_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyI3BOAEvPT_,@function
_ZSt8_DestroyI3BOAEvPT_:                # @_ZSt8_DestroyI3BOAEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN3BOAD2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end164:
	.size	_ZSt8_DestroyI3BOAEvPT_, .Lfunc_end164-_ZSt8_DestroyI3BOAEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofI3BOAEPT_RS1_,"axG",@progbits,_ZSt11__addressofI3BOAEPT_RS1_,comdat
	.weak	_ZSt11__addressofI3BOAEPT_RS1_ # -- Begin function _ZSt11__addressofI3BOAEPT_RS1_
	.p2align	4, 0x90
	.type	_ZSt11__addressofI3BOAEPT_RS1_,@function
_ZSt11__addressofI3BOAEPT_RS1_:         # @_ZSt11__addressofI3BOAEPT_RS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end165:
	.size	_ZSt11__addressofI3BOAEPT_RS1_, .Lfunc_end165-_ZSt11__addressofI3BOAEPT_RS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseI3BOASaIS0_EE13_M_deallocateEPS0_m,"axG",@progbits,_ZNSt12_Vector_baseI3BOASaIS0_EE13_M_deallocateEPS0_m,comdat
	.weak	_ZNSt12_Vector_baseI3BOASaIS0_EE13_M_deallocateEPS0_m # -- Begin function _ZNSt12_Vector_baseI3BOASaIS0_EE13_M_deallocateEPS0_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseI3BOASaIS0_EE13_M_deallocateEPS0_m,@function
_ZNSt12_Vector_baseI3BOASaIS0_EE13_M_deallocateEPS0_m: # @_ZNSt12_Vector_baseI3BOASaIS0_EE13_M_deallocateEPS0_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, -16(%rbp)
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	je	.LBB166_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaI3BOAEE10deallocateERS1_PS0_m
.LBB166_2:
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end166:
	.size	_ZNSt12_Vector_baseI3BOASaIS0_EE13_M_deallocateEPS0_m, .Lfunc_end166-_ZNSt12_Vector_baseI3BOASaIS0_EE13_M_deallocateEPS0_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaI3BOAED2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end167:
	.size	_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implD2Ev, .Lfunc_end167-_ZNSt12_Vector_baseI3BOASaIS0_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaI3BOAEE10deallocateERS1_PS0_m,"axG",@progbits,_ZNSt16allocator_traitsISaI3BOAEE10deallocateERS1_PS0_m,comdat
	.weak	_ZNSt16allocator_traitsISaI3BOAEE10deallocateERS1_PS0_m # -- Begin function _ZNSt16allocator_traitsISaI3BOAEE10deallocateERS1_PS0_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaI3BOAEE10deallocateERS1_PS0_m,@function
_ZNSt16allocator_traitsISaI3BOAEE10deallocateERS1_PS0_m: # @_ZNSt16allocator_traitsISaI3BOAEE10deallocateERS1_PS0_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rdx, %rdi
	movq	-32(%rbp), %rdx         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorI3BOAE10deallocateEPS1_m
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end168:
	.size	_ZNSt16allocator_traitsISaI3BOAEE10deallocateERS1_PS0_m, .Lfunc_end168-_ZNSt16allocator_traitsISaI3BOAEE10deallocateERS1_PS0_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorI3BOAE10deallocateEPS1_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorI3BOAE10deallocateEPS1_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorI3BOAE10deallocateEPS1_m # -- Begin function _ZN9__gnu_cxx13new_allocatorI3BOAE10deallocateEPS1_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorI3BOAE10deallocateEPS1_m,@function
_ZN9__gnu_cxx13new_allocatorI3BOAE10deallocateEPS1_m: # @_ZN9__gnu_cxx13new_allocatorI3BOAE10deallocateEPS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end169:
	.size	_ZN9__gnu_cxx13new_allocatorI3BOAE10deallocateEPS1_m, .Lfunc_end169-_ZN9__gnu_cxx13new_allocatorI3BOAE10deallocateEPS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaI3BOAED2Ev,"axG",@progbits,_ZNSaI3BOAED2Ev,comdat
	.weak	_ZNSaI3BOAED2Ev         # -- Begin function _ZNSaI3BOAED2Ev
	.p2align	4, 0x90
	.type	_ZNSaI3BOAED2Ev,@function
_ZNSaI3BOAED2Ev:                        # @_ZNSaI3BOAED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorI3BOAED2Ev
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end170:
	.size	_ZNSaI3BOAED2Ev, .Lfunc_end170-_ZNSaI3BOAED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorI3BOAED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorI3BOAED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorI3BOAED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorI3BOAED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorI3BOAED2Ev,@function
_ZN9__gnu_cxx13new_allocatorI3BOAED2Ev: # @_ZN9__gnu_cxx13new_allocatorI3BOAED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	retq
.Lfunc_end171:
	.size	_ZN9__gnu_cxx13new_allocatorI3BOAED2Ev, .Lfunc_end171-_ZN9__gnu_cxx13new_allocatorI3BOAED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_,"axG",@progbits,_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_,comdat
	.weak	_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_ # -- Begin function _ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_,@function
_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_: # @_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	8(%rsi), %rdi
	cmpq	16(%rsi), %rdi
	movq	%rsi, -32(%rbp)         # 8-byte Spill
	je	.LBB172_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB172_3
.LBB172_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIdSaIdEE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
.LBB172_3:
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end172:
	.size	_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_, .Lfunc_end172-_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_,"axG",@progbits,_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_,comdat
	.weak	_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_ # -- Begin function _ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_
	.p2align	4, 0x90
	.type	_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_,@function
_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_: # @_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end173:
	.size	_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_, .Lfunc_end173-_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end174:
	.size	_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_, .Lfunc_end174-_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE,"axG",@progbits,_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE,comdat
	.weak	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE # -- Begin function _ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE,@function
_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE: # @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end175:
	.size	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE, .Lfunc_end175-_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_,"axG",@progbits,_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_,comdat
	.weak	_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_ # -- Begin function _ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_,@function
_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_: # @_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
.Lfunc_begin19:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception19
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$240, %rsp
	movq	%rsi, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movl	$.L.str.8, %eax
	movl	%eax, %esi
	movl	$1, %eax
	movl	%eax, %edi
	movq	%rdi, -88(%rbp)         # 8-byte Spill
	movq	%rdx, %rdi
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movq	%rsi, -96(%rbp)         # 8-byte Spill
	movq	%rcx, %rsi
	movq	-96(%rbp), %r8          # 8-byte Reload
	movq	%rdx, -104(%rbp)        # 8-byte Spill
	movq	%r8, %rdx
	callq	_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc
	movq	%rax, -32(%rbp)
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIdSaIdEE5beginEv
	movq	%rax, -48(%rbp)
	leaq	-8(%rbp), %rdi
	leaq	-48(%rbp), %rsi
	callq	_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	movq	%rax, -40(%rbp)
	movq	-32(%rbp), %rsi
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-56(%rbp), %rax
	movq	-40(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rsi
	movq	-24(%rbp), %rdi
	movq	%rsi, -112(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
.Ltmp141:
	movq	-104(%rbp), %rdi        # 8-byte Reload
	movq	-112(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_
.Ltmp142:
	jmp	.LBB176_1
.LBB176_1:
	movq	$0, -64(%rbp)
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rdi
	leaq	-8(%rbp), %rcx
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	movq	(%rax), %rsi
	movq	-56(%rbp), %rdx
	movq	-104(%rbp), %rdi        # 8-byte Reload
	movq	%rsi, -128(%rbp)        # 8-byte Spill
	movq	%rdx, -136(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
.Ltmp143:
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movq	-136(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_
.Ltmp144:
	movq	%rax, -144(%rbp)        # 8-byte Spill
	jmp	.LBB176_2
.LBB176_2:
	movq	-144(%rbp), %rax        # 8-byte Reload
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rcx
	addq	$8, %rcx
	movq	%rcx, -64(%rbp)
	leaq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	movq	(%rax), %rdi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	8(%rax), %rsi
	movq	-64(%rbp), %rdx
	movq	%rdi, -152(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rdx, -160(%rbp)        # 8-byte Spill
	movq	%rsi, -168(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
.Ltmp145:
	movq	-152(%rbp), %rdi        # 8-byte Reload
	movq	-168(%rbp), %rsi        # 8-byte Reload
	movq	-160(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_
.Ltmp146:
	movq	%rax, -176(%rbp)        # 8-byte Spill
	jmp	.LBB176_3
.LBB176_3:
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	%rax, -64(%rbp)
	jmp	.LBB176_14
.LBB176_4:
.Ltmp147:
	movl	%edx, %ecx
	movq	%rax, -72(%rbp)
	movl	%ecx, -76(%rbp)
# %bb.5:
	movq	-72(%rbp), %rdi
	callq	__cxa_begin_catch
	cmpq	$0, -64(%rbp)
	movq	%rax, -184(%rbp)        # 8-byte Spill
	jne	.LBB176_9
# %bb.6:
	movq	-56(%rbp), %rax
	movq	-40(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rsi
.Ltmp148:
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_
.Ltmp149:
	jmp	.LBB176_7
.LBB176_7:
	jmp	.LBB176_11
.LBB176_8:
.Ltmp156:
	movl	%edx, %ecx
	movq	%rax, -72(%rbp)
	movl	%ecx, -76(%rbp)
.Ltmp157:
	callq	__cxa_end_catch
.Ltmp158:
	jmp	.LBB176_13
.LBB176_9:
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rsi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -192(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -200(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
.Ltmp150:
	movq	-192(%rbp), %rdi        # 8-byte Reload
	movq	-200(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E
.Ltmp151:
	jmp	.LBB176_10
.LBB176_10:
	jmp	.LBB176_11
.LBB176_11:
	movq	-56(%rbp), %rsi
	movq	-32(%rbp), %rdx
.Ltmp152:
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
.Ltmp153:
	jmp	.LBB176_12
.LBB176_12:
.Ltmp154:
	callq	__cxa_rethrow
.Ltmp155:
	jmp	.LBB176_17
.LBB176_13:
	jmp	.LBB176_15
.LBB176_14:
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -208(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -216(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	-208(%rbp), %rdi        # 8-byte Reload
	movq	-216(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movq	(%rdx), %rsi
	movq	16(%rdx), %rdi
	movq	(%rdx), %rcx
	subq	%rcx, %rdi
	sarq	$3, %rdi
	movq	%rdi, -224(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	-224(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
	movq	-56(%rbp), %rax
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-64(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-56(%rbp), %rax
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rax
	movq	%rax, 16(%rcx)
	addq	$240, %rsp
	popq	%rbp
	retq
.LBB176_15:
	movq	-72(%rbp), %rdi
	callq	_Unwind_Resume
.LBB176_16:
.Ltmp159:
	movl	%edx, %ecx
	movq	%rax, %rdi
	movl	%ecx, -228(%rbp)        # 4-byte Spill
	callq	__clang_call_terminate
.LBB176_17:
.Lfunc_end176:
	.size	_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_, .Lfunc_end176-_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table176:
.Lexception19:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	"\343\200"              # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	91                      # Call site table length
	.long	.Lfunc_begin19-.Lfunc_begin19 # >> Call Site 1 <<
	.long	.Ltmp141-.Lfunc_begin19 #   Call between .Lfunc_begin19 and .Ltmp141
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.long	.Ltmp141-.Lfunc_begin19 # >> Call Site 2 <<
	.long	.Ltmp146-.Ltmp141       #   Call between .Ltmp141 and .Ltmp146
	.long	.Ltmp147-.Lfunc_begin19 #     jumps to .Ltmp147
	.byte	1                       #   On action: 1
	.long	.Ltmp146-.Lfunc_begin19 # >> Call Site 3 <<
	.long	.Ltmp148-.Ltmp146       #   Call between .Ltmp146 and .Ltmp148
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.long	.Ltmp148-.Lfunc_begin19 # >> Call Site 4 <<
	.long	.Ltmp149-.Ltmp148       #   Call between .Ltmp148 and .Ltmp149
	.long	.Ltmp156-.Lfunc_begin19 #     jumps to .Ltmp156
	.byte	0                       #   On action: cleanup
	.long	.Ltmp157-.Lfunc_begin19 # >> Call Site 5 <<
	.long	.Ltmp158-.Ltmp157       #   Call between .Ltmp157 and .Ltmp158
	.long	.Ltmp159-.Lfunc_begin19 #     jumps to .Ltmp159
	.byte	1                       #   On action: 1
	.long	.Ltmp150-.Lfunc_begin19 # >> Call Site 6 <<
	.long	.Ltmp155-.Ltmp150       #   Call between .Ltmp150 and .Ltmp155
	.long	.Ltmp156-.Lfunc_begin19 #     jumps to .Ltmp156
	.byte	0                       #   On action: cleanup
	.long	.Ltmp155-.Lfunc_begin19 # >> Call Site 7 <<
	.long	.Lfunc_end176-.Ltmp155  #   Call between .Ltmp155 and .Lfunc_end176
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.p2align	2
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-24(%rbp), %rdi
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	movsd	(%rax), %xmm0           # xmm0 = mem[0],zero
	movq	-32(%rbp), %rax         # 8-byte Reload
	movsd	%xmm0, (%rax)
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end177:
	.size	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_, .Lfunc_end177-_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc: # @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE8max_sizeEv
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	-56(%rbp), %rdx         # 8-byte Reload
	subq	%rax, %rdx
	cmpq	-16(%rbp), %rdx
	jae	.LBB178_2
# %bb.1:
	movq	-24(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc
.LBB178_2:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	leaq	-40(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	movq	%rax, -40(%rbp)
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-64(%rbp), %rsi         # 8-byte Reload
	addq	(%rax), %rsi
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	-72(%rbp), %rsi         # 8-byte Reload
	cmpq	%rax, %rsi
	jb	.LBB178_4
# %bb.3:
	movq	-32(%rbp), %rax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE8max_sizeEv
	movq	-80(%rbp), %rdi         # 8-byte Reload
	cmpq	%rax, %rdi
	jbe	.LBB178_5
.LBB178_4:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIdSaIdEE8max_sizeEv
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jmp	.LBB178_6
.LBB178_5:
	movq	-32(%rbp), %rax
	movq	%rax, -88(%rbp)         # 8-byte Spill
.LBB178_6:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	retq
.Lfunc_end178:
	.size	_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc, .Lfunc_end178-_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_,"axG",@progbits,_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_,comdat
	.weak	_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ # -- Begin function _ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_,@function
_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_: # @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	subq	%rax, %rsi
	sarq	$3, %rsi
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end179:
	.size	_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_, .Lfunc_end179-_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm,@function
_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm: # @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	cmpq	$0, -16(%rbp)
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	je	.LBB180_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIdEE8allocateERS0_m
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB180_3
.LBB180_2:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	jmp	.LBB180_3
.LBB180_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end180:
	.size	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm, .Lfunc_end180-_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_,"axG",@progbits,_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_,comdat
	.weak	_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_ # -- Begin function _ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_
	.p2align	4, 0x90
	.type	_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_,@function
_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_: # @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_
	movq	%rax, -48(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	movq	-40(%rbp), %rdi
	movq	-48(%rbp), %rsi
	callq	_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end181:
	.size	_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_, .Lfunc_end181-_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_,"axG",@progbits,_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_,comdat
	.weak	_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_ # -- Begin function _ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_,@function
_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_: # @_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end182:
	.size	_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_, .Lfunc_end182-_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIdSaIdEE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIdSaIdEE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIdSaIdEE8max_sizeEv # -- Begin function _ZNKSt6vectorIdSaIdEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIdSaIdEE8max_sizeEv,@function
_ZNKSt6vectorIdSaIdEE8max_sizeEv:       # @_ZNKSt6vectorIdSaIdEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end183:
	.size	_ZNKSt6vectorIdSaIdEE8max_sizeEv, .Lfunc_end183-_ZNKSt6vectorIdSaIdEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3maxImERKT_S2_S2_,"axG",@progbits,_ZSt3maxImERKT_S2_S2_,comdat
	.weak	_ZSt3maxImERKT_S2_S2_   # -- Begin function _ZSt3maxImERKT_S2_S2_
	.p2align	4, 0x90
	.type	_ZSt3maxImERKT_S2_S2_,@function
_ZSt3maxImERKT_S2_S2_:                  # @_ZSt3maxImERKT_S2_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	(%rsi), %rsi
	movq	-24(%rbp), %rdi
	cmpq	(%rdi), %rsi
	jae	.LBB184_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB184_3
.LBB184_2:
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
.LBB184_3:
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end184:
	.size	_ZSt3maxImERKT_S2_S2_, .Lfunc_end184-_ZSt3maxImERKT_S2_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_,"axG",@progbits,_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_,comdat
	.weak	_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_ # -- Begin function _ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_,@function
_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_: # @_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end185:
	.size	_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_, .Lfunc_end185-_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end186:
	.size	_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv, .Lfunc_end186-_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movabsq	$2305843009213693951, %rax # imm = 0x1FFFFFFFFFFFFFFF
	movq	%rdi, -8(%rbp)
	popq	%rbp
	retq
.Lfunc_end187:
	.size	_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv, .Lfunc_end187-_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIdEE8allocateERS0_m,"axG",@progbits,_ZNSt16allocator_traitsISaIdEE8allocateERS0_m,comdat
	.weak	_ZNSt16allocator_traitsISaIdEE8allocateERS0_m # -- Begin function _ZNSt16allocator_traitsISaIdEE8allocateERS0_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIdEE8allocateERS0_m,@function
_ZNSt16allocator_traitsISaIdEE8allocateERS0_m: # @_ZNSt16allocator_traitsISaIdEE8allocateERS0_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end188:
	.size	_ZNSt16allocator_traitsISaIdEE8allocateERS0_m, .Lfunc_end188-_ZNSt16allocator_traitsISaIdEE8allocateERS0_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rdx
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv
	movq	-32(%rbp), %rdx         # 8-byte Reload
	cmpq	%rax, %rdx
	jbe	.LBB189_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv
.LBB189_2:
	movq	-16(%rbp), %rax
	shlq	$3, %rax
	movq	%rax, %rdi
	callq	_Znwm
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end189:
	.size	_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv, .Lfunc_end189-_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E # -- Begin function _ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E
	.p2align	4, 0x90
	.type	_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E: # @_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rcx
	movq	%rcx, -48(%rbp)
	movq	-24(%rbp), %rdx
	movq	-40(%rbp), %rdi
	movq	-48(%rbp), %rsi
	callq	_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end190:
	.size	_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E, .Lfunc_end190-_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_,"axG",@progbits,_ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_,comdat
	.weak	_ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_ # -- Begin function _ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_
	.p2align	4, 0x90
	.type	_ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_,@function
_ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_: # @_ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	leaq	-8(%rbp), %rax
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13move_iteratorIPdEC2ES0_
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end191:
	.size	_ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_, .Lfunc_end191-_ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_,"axG",@progbits,_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_,comdat
	.weak	_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_ # -- Begin function _ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_,@function
_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_: # @_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-16(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-24(%rbp), %rdx
	movq	-40(%rbp), %rdi
	movq	-48(%rbp), %rsi
	callq	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end192:
	.size	_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_, .Lfunc_end192-_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_,"axG",@progbits,_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_,comdat
	.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_ # -- Begin function _ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_
	.p2align	4, 0x90
	.type	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_,@function
_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_: # @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	%rdx, -32(%rbp)
	movq	-16(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end193:
	.size	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_, .Lfunc_end193-_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_,"axG",@progbits,_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_,comdat
	.weak	_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_ # -- Begin function _ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_,@function
_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_: # @_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	%rdx, -32(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E
	movq	-16(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-40(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E
	movq	-24(%rbp), %rdx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end194:
	.size	_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_, .Lfunc_end194-_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_ # -- Begin function _ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_,@function
_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_: # @_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPdET_S1_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPdET_S1_
	movq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPdET_S1_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end195:
	.size	_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_, .Lfunc_end195-_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E,"axG",@progbits,_ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E,comdat
	.weak	_ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E # -- Begin function _ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E,@function
_ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E: # @_ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	leaq	-8(%rbp), %rax
	movq	%rdi, -8(%rbp)
	movq	%rax, %rdi
	callq	_ZNKSt13move_iteratorIPdE4baseEv
	movq	%rax, %rdi
	callq	_ZSt12__miter_baseIPdET_S1_
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end196:
	.size	_ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E, .Lfunc_end196-_ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_ # -- Begin function _ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_,@function
_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_: # @_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_
	addq	$32, %rsp
	popq	%rbp
	retq
.Lfunc_end197:
	.size	_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_, .Lfunc_end197-_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPdET_S1_,"axG",@progbits,_ZSt12__niter_baseIPdET_S1_,comdat
	.weak	_ZSt12__niter_baseIPdET_S1_ # -- Begin function _ZSt12__niter_baseIPdET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPdET_S1_,@function
_ZSt12__niter_baseIPdET_S1_:            # @_ZSt12__niter_baseIPdET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end198:
	.size	_ZSt12__niter_baseIPdET_S1_, .Lfunc_end198-_ZSt12__niter_baseIPdET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_,"axG",@progbits,_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_,comdat
	.weak	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_ # -- Begin function _ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_,@function
_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_: # @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rsi
	subq	%rsi, %rdx
	sarq	$3, %rdx
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB199_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove
	movq	%rax, -40(%rbp)         # 8-byte Spill
.LBB199_2:
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$48, %rsp
	popq	%rbp
	retq
.Lfunc_end199:
	.size	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_, .Lfunc_end199-_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIPdET_S1_,"axG",@progbits,_ZSt12__miter_baseIPdET_S1_,comdat
	.weak	_ZSt12__miter_baseIPdET_S1_ # -- Begin function _ZSt12__miter_baseIPdET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIPdET_S1_,@function
_ZSt12__miter_baseIPdET_S1_:            # @_ZSt12__miter_baseIPdET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	retq
.Lfunc_end200:
	.size	_ZSt12__miter_baseIPdET_S1_, .Lfunc_end200-_ZSt12__miter_baseIPdET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt13move_iteratorIPdE4baseEv,"axG",@progbits,_ZNKSt13move_iteratorIPdE4baseEv,comdat
	.weak	_ZNKSt13move_iteratorIPdE4baseEv # -- Begin function _ZNKSt13move_iteratorIPdE4baseEv
	.p2align	4, 0x90
	.type	_ZNKSt13move_iteratorIPdE4baseEv,@function
_ZNKSt13move_iteratorIPdE4baseEv:       # @_ZNKSt13move_iteratorIPdE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rax
	popq	%rbp
	retq
.Lfunc_end201:
	.size	_ZNKSt13move_iteratorIPdE4baseEv, .Lfunc_end201-_ZNKSt13move_iteratorIPdE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13move_iteratorIPdEC2ES0_,"axG",@progbits,_ZNSt13move_iteratorIPdEC2ES0_,comdat
	.weak	_ZNSt13move_iteratorIPdEC2ES0_ # -- Begin function _ZNSt13move_iteratorIPdEC2ES0_
	.p2align	4, 0x90
	.type	_ZNSt13move_iteratorIPdEC2ES0_,@function
_ZNSt13move_iteratorIPdEC2ES0_:         # @_ZNSt13move_iteratorIPdEC2ES0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, (%rsi)
	popq	%rbp
	retq
.Lfunc_end202:
	.size	_ZNSt13move_iteratorIPdEC2ES0_, .Lfunc_end202-_ZNSt13move_iteratorIPdEC2ES0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_,@function
_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_: # @_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	retq
.Lfunc_end203:
	.size	_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_, .Lfunc_end203-_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text.startup,"ax",@progbits
	.p2align	4, 0x90         # -- Begin function _GLOBAL__sub_I_main.cpp
	.type	_GLOBAL__sub_I_main.cpp,@function
_GLOBAL__sub_I_main.cpp:                # @_GLOBAL__sub_I_main.cpp
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	callq	__cxx_global_var_init
	popq	%rbp
	retq
.Lfunc_end204:
	.size	_GLOBAL__sub_I_main.cpp, .Lfunc_end204-_GLOBAL__sub_I_main.cpp
	.cfi_endproc
                                        # -- End function
	.type	_ZStL8__ioinit,@object  # @_ZStL8__ioinit
	.local	_ZStL8__ioinit
	.comm	_ZStL8__ioinit,1,1
	.hidden	__dso_handle
	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"BTC-USD"
	.size	.L.str, 8

	.type	.L.str.1,@object        # @.str.1
.L.str.1:
	.asciz	"l2update"
	.size	.L.str.1, 9

	.type	.L.str.2,@object        # @.str.2
.L.str.2:
	.asciz	"sell"
	.size	.L.str.2, 5

	.type	.L.str.3,@object        # @.str.3
.L.str.3:
	.asciz	"buy"
	.size	.L.str.3, 4

	.type	.L.str.4,@object        # @.str.4
.L.str.4:
	.asciz	"Across J passes of I max depth, the average update was "
	.size	.L.str.4, 56

	.type	.L.str.5,@object        # @.str.5
.L.str.5:
	.asciz	" microseconds "
	.size	.L.str.5, 15

	.type	.L.str.6,@object        # @.str.6
.L.str.6:
	.asciz	"Something weird happened adding an ask"
	.size	.L.str.6, 39

	.type	_ZStL19piecewise_construct,@object # @_ZStL19piecewise_construct
	.section	.rodata,"a",@progbits
_ZStL19piecewise_construct:
	.zero	1
	.size	_ZStL19piecewise_construct, 1

	.type	.L.str.7,@object        # @.str.7
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.7:
	.asciz	"Something weird happened adding an bid"
	.size	.L.str.7, 39

	.type	.L.str.8,@object        # @.str.8
.L.str.8:
	.asciz	"vector::_M_realloc_insert"
	.size	.L.str.8, 26

	.section	.init_array,"aw",@init_array
	.p2align	3
	.quad	_GLOBAL__sub_I_main.cpp

	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.section	".note.GNU-stack","",@progbits
